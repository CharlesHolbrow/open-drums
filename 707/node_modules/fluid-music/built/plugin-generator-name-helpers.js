"use strict";
// The section below contains methods for creating parameter keys
Object.defineProperty(exports, "__esModule", { value: true });
exports.makeVarName = exports.camelCaseFromParamName = exports.restWord = exports.firstWord = exports.isUpperCase = exports.lowerFirstLetter = exports.upperFirstLetter = void 0;
exports.upperFirstLetter = (string) => {
    const s = Array.from(string);
    s[0] = s[0].toUpperCase();
    return s.join('');
};
exports.lowerFirstLetter = (string) => {
    const s = Array.from(string);
    s[0] = s[0].toLowerCase();
    return s.join('');
};
exports.isUpperCase = (s) => s.length && (s.toUpperCase() === s);
/**
 * Create a version of the word that with a lower case first letter.
 */
exports.firstWord = (word) => {
    if (word.length === 1 || exports.isUpperCase(word))
        return word.toLowerCase();
    // We have a lower or mixed case word. Decide based on the second letter.
    return exports.isUpperCase(word[1]) ? word.toLowerCase() : exports.lowerFirstLetter(word);
};
exports.restWord = (word) => {
    if (word.length === 1)
        return word.toUpperCase();
    word = exports.isUpperCase(word) ? word.toLowerCase() : word;
    // We have a lower or mixed case word. Decide based on the second letter.
    word = exports.isUpperCase(word[1]) ? word.toLowerCase() : word;
    return exports.upperFirstLetter(word);
};
/**
 * Generate a camelCase name from a parameter name
 */
exports.camelCaseFromParamName = (paramName) => {
    return paramName
        .replace(/[\(\):\# \_\-\\\/]+/g, '-') // Replace misc chars with '-'
        .split('-') // create an array of words
        .filter(s => s.length)
        .map((word, i) => {
        if (i === 0)
            return exports.firstWord(word); // treat 1st word as special case
        return exports.restWord(word); // remaining words treated the same
    })
        .join('');
};
// Convert to an acceptable variable name
exports.makeVarName = (name) => name.replace(/[\.\(\):\# \_\-\\\/]+/g, '');
//# sourceMappingURL=plugin-generator-name-helpers.js.map