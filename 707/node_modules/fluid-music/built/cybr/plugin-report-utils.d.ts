export declare function guessParamRange(paramInfo: any): number[] | null;
/**
 * Try to get a lower case string that describes the parameter units. Returns
 * null if the unit type could not be identified.
 * @param paramInfo the parameter object found in a plugin parameter report
 */
export declare function guessParamUnits(paramInfo: any): any;
/**
 * Guess if the parameter is a continuous value. This will be a much stronger
 * guess if the report was generates with a large number of steps.
 * @param paramInfo a parameter report
 */
export declare function guessIsContinuous(paramInfo: any): boolean;
export declare function guessIsLinear(paramInfo: any): boolean;
interface s2n {
    [key: string]: number;
}
export declare function guessDiscreteChoices(paramInfo: any): s2n;
/**
 * Create a 'guess' object that aggregates results of the guess methods.
 * @param paramInfo the parameter object found in a plugin parameter report
 */
export declare function guess(paramInfo: any): {
    units: any;
    isContinuous: boolean;
    choices: s2n | null;
    isLinear: boolean;
    range: number[] | null;
};
export {};
