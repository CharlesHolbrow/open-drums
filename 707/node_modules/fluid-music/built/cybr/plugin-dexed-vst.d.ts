declare const _exports: {
    type: string;
    name: string;
    /**
     * Select a `Dexed` vst plugin on the selected track, creating a new
     * plugin instance if needed
     * @param {number} [pluginId] - optional index of the plugin to select
     */
    select(pluginId?: number | undefined): {
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
        address: string;
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setDryLevel(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setWetLevel(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setCutoff(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setResonance(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOutput(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setMasterTuneAdj(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setAlgorithm(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFeedback(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOscKeySync(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setLfoSpeed(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setLfoDelay(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setLfoPmDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setLfoAmDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setLfoKeySync(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setLfoWave(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setMiddleC(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setPModeSens(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setPitchEgRate1(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setPitchEgRate2(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setPitchEgRate3(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setPitchEgRate4(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setPitchEgLevel1(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setPitchEgLevel2(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setPitchEgLevel3(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setPitchEgLevel4(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp1EgRate1(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp1EgRate2(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp1EgRate3(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp1EgRate4(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp1EgLevel1(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp1EgLevel2(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp1EgLevel3(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp1EgLevel4(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp1OutputLevel(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp1Mode(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp1FCoarse(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp1FFine(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp1OscDetune(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp1BreakPoint(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp1LScaleDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp1RScaleDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp1LKeyScale(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp1RKeyScale(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp1RateScaling(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp1AModSens(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp1KeyVelocity(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp1Switch(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp2EgRate1(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp2EgRate2(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp2EgRate3(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp2EgRate4(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp2EgLevel1(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp2EgLevel2(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp2EgLevel3(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp2EgLevel4(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp2OutputLevel(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp2Mode(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp2FCoarse(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp2FFine(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp2OscDetune(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp2BreakPoint(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp2LScaleDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp2RScaleDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp2LKeyScale(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp2RKeyScale(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp2RateScaling(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp2AModSens(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp2KeyVelocity(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp2Switch(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp3EgRate1(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp3EgRate2(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp3EgRate3(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp3EgRate4(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp3EgLevel1(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp3EgLevel2(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp3EgLevel3(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp3EgLevel4(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp3OutputLevel(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp3Mode(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp3FCoarse(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp3FFine(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp3OscDetune(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp3BreakPoint(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp3LScaleDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp3RScaleDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp3LKeyScale(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp3RKeyScale(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp3RateScaling(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp3AModSens(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp3KeyVelocity(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp3Switch(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp4EgRate1(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp4EgRate2(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp4EgRate3(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp4EgRate4(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp4EgLevel1(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp4EgLevel2(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp4EgLevel3(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp4EgLevel4(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp4OutputLevel(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp4Mode(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp4FCoarse(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp4FFine(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp4OscDetune(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp4BreakPoint(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp4LScaleDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp4RScaleDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp4LKeyScale(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp4RKeyScale(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp4RateScaling(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp4AModSens(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp4KeyVelocity(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp4Switch(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp5EgRate1(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp5EgRate2(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp5EgRate3(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp5EgRate4(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp5EgLevel1(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp5EgLevel2(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp5EgLevel3(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp5EgLevel4(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp5OutputLevel(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp5Mode(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp5FCoarse(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp5FFine(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp5OscDetune(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp5BreakPoint(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp5LScaleDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp5RScaleDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp5LKeyScale(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp5RKeyScale(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp5RateScaling(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp5AModSens(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp5KeyVelocity(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp5Switch(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp6EgRate1(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp6EgRate2(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp6EgRate3(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp6EgRate4(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp6EgLevel1(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp6EgLevel2(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp6EgLevel3(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp6EgLevel4(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp6OutputLevel(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp6Mode(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp6FCoarse(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp6FFine(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp6OscDetune(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp6BreakPoint(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp6LScaleDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp6RScaleDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp6LKeyScale(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp6RKeyScale(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp6RateScaling(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp6AModSens(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp6KeyVelocity(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOp6Switch(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    params: {
        DryLevel: string;
        WetLevel: string;
        Cutoff: string;
        Resonance: string;
        Output: string;
        MasterTuneAdj: string;
        Algorithm: string;
        Feedback: string;
        OscKeySync: string;
        LfoSpeed: string;
        LfoDelay: string;
        LfoPmDepth: string;
        LfoAmDepth: string;
        LfoKeySync: string;
        LfoWave: string;
        MiddleC: string;
        PModeSens: string;
        PitchEgRate1: string;
        PitchEgRate2: string;
        PitchEgRate3: string;
        PitchEgRate4: string;
        PitchEgLevel1: string;
        PitchEgLevel2: string;
        PitchEgLevel3: string;
        PitchEgLevel4: string;
        Op1EgRate1: string;
        Op1EgRate2: string;
        Op1EgRate3: string;
        Op1EgRate4: string;
        Op1EgLevel1: string;
        Op1EgLevel2: string;
        Op1EgLevel3: string;
        Op1EgLevel4: string;
        Op1OutputLevel: string;
        Op1Mode: string;
        Op1FCoarse: string;
        Op1FFine: string;
        Op1OscDetune: string;
        Op1BreakPoint: string;
        Op1LScaleDepth: string;
        Op1RScaleDepth: string;
        Op1LKeyScale: string;
        Op1RKeyScale: string;
        Op1RateScaling: string;
        Op1AModSens: string;
        Op1KeyVelocity: string;
        Op1Switch: string;
        Op2EgRate1: string;
        Op2EgRate2: string;
        Op2EgRate3: string;
        Op2EgRate4: string;
        Op2EgLevel1: string;
        Op2EgLevel2: string;
        Op2EgLevel3: string;
        Op2EgLevel4: string;
        Op2OutputLevel: string;
        Op2Mode: string;
        Op2FCoarse: string;
        Op2FFine: string;
        Op2OscDetune: string;
        Op2BreakPoint: string;
        Op2LScaleDepth: string;
        Op2RScaleDepth: string;
        Op2LKeyScale: string;
        Op2RKeyScale: string;
        Op2RateScaling: string;
        Op2AModSens: string;
        Op2KeyVelocity: string;
        Op2Switch: string;
        Op3EgRate1: string;
        Op3EgRate2: string;
        Op3EgRate3: string;
        Op3EgRate4: string;
        Op3EgLevel1: string;
        Op3EgLevel2: string;
        Op3EgLevel3: string;
        Op3EgLevel4: string;
        Op3OutputLevel: string;
        Op3Mode: string;
        Op3FCoarse: string;
        Op3FFine: string;
        Op3OscDetune: string;
        Op3BreakPoint: string;
        Op3LScaleDepth: string;
        Op3RScaleDepth: string;
        Op3LKeyScale: string;
        Op3RKeyScale: string;
        Op3RateScaling: string;
        Op3AModSens: string;
        Op3KeyVelocity: string;
        Op3Switch: string;
        Op4EgRate1: string;
        Op4EgRate2: string;
        Op4EgRate3: string;
        Op4EgRate4: string;
        Op4EgLevel1: string;
        Op4EgLevel2: string;
        Op4EgLevel3: string;
        Op4EgLevel4: string;
        Op4OutputLevel: string;
        Op4Mode: string;
        Op4FCoarse: string;
        Op4FFine: string;
        Op4OscDetune: string;
        Op4BreakPoint: string;
        Op4LScaleDepth: string;
        Op4RScaleDepth: string;
        Op4LKeyScale: string;
        Op4RKeyScale: string;
        Op4RateScaling: string;
        Op4AModSens: string;
        Op4KeyVelocity: string;
        Op4Switch: string;
        Op5EgRate1: string;
        Op5EgRate2: string;
        Op5EgRate3: string;
        Op5EgRate4: string;
        Op5EgLevel1: string;
        Op5EgLevel2: string;
        Op5EgLevel3: string;
        Op5EgLevel4: string;
        Op5OutputLevel: string;
        Op5Mode: string;
        Op5FCoarse: string;
        Op5FFine: string;
        Op5OscDetune: string;
        Op5BreakPoint: string;
        Op5LScaleDepth: string;
        Op5RScaleDepth: string;
        Op5LKeyScale: string;
        Op5RKeyScale: string;
        Op5RateScaling: string;
        Op5AModSens: string;
        Op5KeyVelocity: string;
        Op5Switch: string;
        Op6EgRate1: string;
        Op6EgRate2: string;
        Op6EgRate3: string;
        Op6EgRate4: string;
        Op6EgLevel1: string;
        Op6EgLevel2: string;
        Op6EgLevel3: string;
        Op6EgLevel4: string;
        Op6OutputLevel: string;
        Op6Mode: string;
        Op6FCoarse: string;
        Op6FFine: string;
        Op6OscDetune: string;
        Op6BreakPoint: string;
        Op6LScaleDepth: string;
        Op6RScaleDepth: string;
        Op6LKeyScale: string;
        Op6RKeyScale: string;
        Op6RateScaling: string;
        Op6AModSens: string;
        Op6KeyVelocity: string;
        Op6Switch: string;
    };
};
export = _exports;
