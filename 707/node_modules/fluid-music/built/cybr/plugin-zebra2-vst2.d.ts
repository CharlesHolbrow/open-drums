declare const _exports: {
    type: string;
    name: string;
    /**
     * Select a `Zebra2` vst plugin on the selected track, creating a new
     * plugin instance if needed
     * @param {number} [nth] Optional index of the `Zebra2` instance.
     *    The selected track may have multiple plugins with the same name. Index
     *    from within those plugins. Most of the time this isn't needed, because
     *    it is unusual to have more than one plugin with a given name on a
     *    particular track.
     */
    select(nth?: number | undefined): {
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
        address: string;
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setDryLevel(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setWetLevel(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setMainOutput(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setMainActiveLfog(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setMainActiveLfog2(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setPcoreX1(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setPcoreY1(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setPcoreX2(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setPcoreY2(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setPcoreX3(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setPcoreY3(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setPcoreX4(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setPcoreY4(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setPcoreMatrix1Source(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setPcoreMatrix1Depth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setPcoreMatrix1ViaSrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setPcoreMatrix1Via(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setPcoreMatrix2Source(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setPcoreMatrix2Depth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setPcoreMatrix2ViaSrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setPcoreMatrix2Via(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setPcoreMatrix3Source(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setPcoreMatrix3Depth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setPcoreMatrix3ViaSrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setPcoreMatrix3Via(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setPcoreMatrix4Source(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setPcoreMatrix4Depth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setPcoreMatrix4ViaSrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setPcoreMatrix4Via(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setLfogSync(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setLfogPhase(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setLfog2Sync(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setLfog2Phase(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVccActiveLfo1(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVccActiveLfo2(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVccActiveLfo3(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVccActiveLfo4(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVccVoices(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVccVoicing(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVccMode(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVccPortamento(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVccTranspose(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVccFineTuneCents(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVccArpStepModA1(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVccArpStepModA2(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVccArpStepModA3(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVccArpStepModA4(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVccArpStepModA5(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVccArpStepModA6(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVccArpStepModA7(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVccArpStepModA8(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVccArpStepModA9(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVccArpStepModA10(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVccArpStepModA11(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVccArpStepModA12(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVccArpStepModA13(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVccArpStepModA14(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVccArpStepModA15(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVccArpStepModA16(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setEnv1Init(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setEnv1Attack(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setEnv1Decay(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setEnv1Sustain(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setEnv1FallRise(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setEnv1Sustain2(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setEnv1Release(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setEnv1Velocity(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setEnv1Slope(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setEnv2Init(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setEnv2Attack(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setEnv2Decay(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setEnv2Sustain(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setEnv2FallRise(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setEnv2Sustain2(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setEnv2Release(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setEnv2Velocity(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setEnv2Slope(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setEnv3Init(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setEnv3Attack(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setEnv3Decay(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setEnv3Sustain(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setEnv3FallRise(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setEnv3Sustain2(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setEnv3Release(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setEnv3Velocity(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setEnv3Slope(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setEnv4Init(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setEnv4Attack(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setEnv4Decay(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setEnv4Sustain(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setEnv4FallRise(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setEnv4Sustain2(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setEnv4Release(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setEnv4Velocity(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setEnv4Slope(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setMseg1Velocity(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setMseg1Attack(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setMseg1Loop(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setMseg1Release(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setMseg2Velocity(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setMseg2Attack(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setMseg2Loop(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setMseg2Release(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setMseg3Velocity(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setMseg3Attack(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setMseg3Loop(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setMseg3Release(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setMseg4Velocity(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setMseg4Attack(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setMseg4Loop(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setMseg4Release(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setLfo1Sync(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setLfo1Delay(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setLfo2Sync(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setLfo2Delay(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setLfo3Sync(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setLfo3Delay(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setLfo4Sync(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setLfo4Delay(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setMmix1Constant(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setMmix2Constant(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setMmix3Constant(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setMmix4Constant(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc1Tune(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc1TuneModSrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc1TuneModDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc1Phase(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc1PhaseModSrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc1PhaseModDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc1WaveWarp(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc1WarpModSrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc1WarpModDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc1Vibrato(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc1SpectraFX1Val(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc1Sfx1modsrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc1Sfx1moddepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc1SpectraFX2Val(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc1Sfx2modsrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc1Sfx2moddepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc1Detune(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc1Volume(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc1VolumeModSrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc1VolumeModDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc1Pan(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc1PanModSrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc1PanModDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc1SyncTune(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc1SyncModSrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc1SyncModDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc1PolyWidth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc1Normalize(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc2Tune(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc2TuneModSrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc2TuneModDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc2Phase(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc2PhaseModSrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc2PhaseModDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc2WaveWarp(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc2WarpModSrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc2WarpModDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc2Vibrato(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc2SpectraFX1Val(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc2Sfx1modsrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc2Sfx1moddepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc2SpectraFX2Val(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc2Sfx2modsrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc2Sfx2moddepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc2Detune(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc2Volume(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc2VolumeModSrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc2VolumeModDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc2Pan(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc2PanModSrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc2PanModDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc2SyncTune(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc2SyncModSrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc2SyncModDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc2PolyWidth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc2Normalize(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc3Tune(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc3TuneModSrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc3TuneModDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc3Phase(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc3PhaseModSrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc3PhaseModDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc3WaveWarp(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc3WarpModSrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc3WarpModDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc3Vibrato(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc3SpectraFX1Val(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc3Sfx1modsrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc3Sfx1moddepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc3SpectraFX2Val(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc3Sfx2modsrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc3Sfx2moddepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc3Detune(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc3Volume(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc3VolumeModSrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc3VolumeModDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc3Pan(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc3PanModSrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc3PanModDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc3SyncTune(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc3SyncModSrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc3SyncModDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc3PolyWidth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc3Normalize(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc4Tune(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc4TuneModSrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc4TuneModDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc4Phase(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc4PhaseModSrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc4PhaseModDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc4WaveWarp(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc4WarpModSrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc4WarpModDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc4Vibrato(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc4SpectraFX1Val(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc4Sfx1modsrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc4Sfx1moddepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc4SpectraFX2Val(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc4Sfx2modsrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc4Sfx2moddepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc4Detune(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc4Volume(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc4VolumeModSrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc4VolumeModDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc4Pan(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc4PanModSrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc4PanModDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc4SyncTune(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc4SyncModSrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc4SyncModDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc4PolyWidth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setOsc4Normalize(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setNoise1Filter1(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setNoise1F1ModSrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setNoise1F1ModDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setNoise1Filter2(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setNoise1F2ModSrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setNoise1F2ModDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setNoise1Volume(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setNoise1VolumeModSrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setNoise1VolumeModDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setNoise1Pan(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setNoise1PanModSrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setNoise1PanModDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setNoise1Width(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setNoise2Filter1(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setNoise2F1ModSrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setNoise2F1ModDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setNoise2Filter2(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setNoise2F2ModSrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setNoise2F2ModDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setNoise2Volume(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setNoise2VolumeModSrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setNoise2VolumeModDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setNoise2Pan(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setNoise2PanModSrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setNoise2PanModDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setNoise2Width(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVcf1Type(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVcf1Cutoff(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVcf1Resonance(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVcf1Drive(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVcf1Gain(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVcf1ModDepth1(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVcf1ModDepth2(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVcf1KeyFollow(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVcf2Type(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVcf2Cutoff(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVcf2Resonance(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVcf2Drive(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVcf2Gain(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVcf2ModDepth1(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVcf2ModDepth2(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVcf2KeyFollow(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVcf3Type(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVcf3Cutoff(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVcf3Resonance(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVcf3Drive(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVcf3Gain(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVcf3ModDepth1(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVcf3ModDepth2(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVcf3KeyFollow(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVcf4Type(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVcf4Cutoff(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVcf4Resonance(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVcf4Drive(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVcf4Gain(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVcf4ModDepth1(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVcf4ModDepth2(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVcf4KeyFollow(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFmo1Tune(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFmo1TuneModSrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFmo1TuneModDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFmo1FmDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFmo1FmModSrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFmo1FmModDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFmo1Vibrato(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFmo1Detune(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFmo1Volume(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFmo1VolumeModSrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFmo1VolumeModDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFmo1Pan(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFmo1PanModSrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFmo1PanModDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFmo1Width(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFmo2Tune(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFmo2TuneModSrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFmo2TuneModDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFmo2FmDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFmo2FmModSrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFmo2FmModDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFmo2Vibrato(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFmo2Detune(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFmo2Volume(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFmo2VolumeModSrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFmo2VolumeModDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFmo2Pan(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFmo2PanModSrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFmo2PanModDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFmo2Width(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFmo3Tune(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFmo3TuneModSrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFmo3TuneModDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFmo3FmDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFmo3FmModSrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFmo3FmModDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFmo3Vibrato(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFmo3Detune(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFmo3Volume(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFmo3VolumeModSrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFmo3VolumeModDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFmo3Pan(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFmo3PanModSrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFmo3PanModDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFmo3Width(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFmo4Tune(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFmo4TuneModSrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFmo4TuneModDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFmo4FmDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFmo4FmModSrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFmo4FmModDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFmo4Vibrato(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFmo4Detune(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFmo4Volume(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFmo4VolumeModSrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFmo4VolumeModDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFmo4Pan(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFmo4PanModSrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFmo4PanModDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFmo4Width(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setComb1Tune(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setComb1KeyScale(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setComb1TuneModDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setComb1Detune(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setComb1Vibrato(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setComb1Feedback(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setComb1Fbmoddepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setComb1Damp(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setComb1DampModDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setComb1PreFill(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setComb1Input(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setComb1InputMod(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setComb1Tone(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setComb1ToneMod(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setComb1Flavour(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setComb1FlavourMod(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setComb1Distortion(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setComb1Dry(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setComb1Volume(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setComb1VolumeModSrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setComb1VolumeModDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setComb1Pan(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setComb1PanModSrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setComb1PanModDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setComb1Width(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setComb2Tune(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setComb2KeyScale(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setComb2TuneModDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setComb2Detune(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setComb2Vibrato(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setComb2Feedback(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setComb2Fbmoddepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setComb2Damp(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setComb2DampModDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setComb2PreFill(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setComb2Input(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setComb2InputMod(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setComb2Tone(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setComb2ToneMod(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setComb2Flavour(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setComb2FlavourMod(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setComb2Distortion(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setComb2Dry(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setComb2Volume(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setComb2VolumeModSrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setComb2VolumeModDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setComb2Pan(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setComb2PanModSrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setComb2PanModDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setComb2Width(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setShape1Depth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setShape1DModSrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setShape1DModDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setShape1Edge(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setShape1EdgeModSrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setShape1EdgeModDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setShape1Input(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setShape1Output(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setShape1HiOut(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setShape2Depth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setShape2DModSrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setShape2DModDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setShape2Edge(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setShape2EdgeModSrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setShape2EdgeModDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setShape2Input(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setShape2Output(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setShape2HiOut(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setMix1Pan(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setMix1Mix(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setMix1PanMode(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setMix1PanModDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setMix1PanModSource(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setMix2Pan(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setMix2Mix(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setMix2PanMode(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setMix2PanModDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setMix2PanModSource(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setMix3Pan(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setMix3Mix(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setMix3PanMode(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setMix3PanModDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setMix3PanModSource(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setMix4Pan(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setMix4Mix(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setMix4PanMode(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setMix4PanModDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setMix4PanModSource(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setXmf1Type(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setXmf1Cutoff(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setXmf1Resonance(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setXmf1FreqMod1(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setXmf1FreqMod2(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setXmf1KeyFollow(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setXmf1FreqOffset(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setXmf1FreqOffMod(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setXmf1FilterFM(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setXmf1Xfmmod(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setXmf1Overload(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setXmf1Click(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setXmf2Type(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setXmf2Cutoff(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setXmf2Resonance(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setXmf2FreqMod1(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setXmf2FreqMod2(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setXmf2KeyFollow(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setXmf2FreqOffset(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setXmf2FreqOffMod(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setXmf2FilterFM(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setXmf2Xfmmod(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setXmf2Overload(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setXmf2Click(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setModFX1Center(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setModFX1Speed(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setModFX1Stereo(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setModFX1Depth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setModFX1Feedback(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setModFX1Mix(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setModFX1LowCutFreq(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setModFX1HiCutFreq(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setModFX1Quad(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setModFX1QuadPhase(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setModFX1LowBoostDb(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setModFX1HighBoostDb(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setModFX2Center(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setModFX2Speed(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setModFX2Stereo(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setModFX2Depth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setModFX2Feedback(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setModFX2Mix(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setModFX2LowCutFreq(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setModFX2HiCutFreq(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setModFX2Quad(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setModFX2QuadPhase(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setModFX2LowBoostDb(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setModFX2HighBoostDb(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setDelay1Mix(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setDelay1Feedback(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setDelay1XBack(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setDelay1Lowpass(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setDelay1Hipass(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setDelay2Mix(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setDelay2Feedback(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setDelay2XBack(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setDelay2Lowpass(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setDelay2Hipass(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setShape3Depth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setShape3DModSrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setShape3DModDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setShape3Edge(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setShape3EdgeModSrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setShape3EdgeModDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setShape3Input(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setShape3Output(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setShape3HiOut(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setShape4Depth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setShape4DModSrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setShape4DModDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setShape4Edge(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setShape4EdgeModSrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setShape4EdgeModDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setShape4Input(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setShape4Output(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setShape4HiOut(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setMix5Pan(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setMix5Mix(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setMix5PanMode(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setMix5PanModDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setMix5PanModSource(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setMix6Pan(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setMix6Mix(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setMix6PanMode(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setMix6PanModDepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setMix6PanModSource(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setRev1Dry(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setRev1Wet(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setRev1Feedback(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setRev1Damp(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setRev1Range(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setRev1Speed(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setRev1Modulation(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setRev1DiffFeedback(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setRev1DiffRange(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setRev1DiffMix(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setRev1DiffMod(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setRev1DiffSpeed(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setComp1Compression(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setComp1Threshold(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setComp1Attack(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setComp1Release(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setComp1Input(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setComp1Output(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setComp2Compression(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setComp2Threshold(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setComp2Attack(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setComp2Release(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setComp2Input(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setComp2Output(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setEq1FreqLowShelf(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setEq1QLowShelf(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setEq1GainLowShelf(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setEq1FreqMid1(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setEq1QMid1(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setEq1GainMid1(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setEq1FreqMid2(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setEq1QMid2(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setEq1GainMid2(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setEq1FreqHiShelf(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setEq1QHiShelf(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setEq1GainHiShelf(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setEq2FreqLowShelf(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setEq2QLowShelf(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setEq2GainLowShelf(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setEq2FreqMid1(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setEq2QMid1(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setEq2GainMid1(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setEq2FreqMid2(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setEq2QMid2(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setEq2GainMid2(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setEq2FreqHiShelf(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setEq2QHiShelf(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setEq2GainHiShelf(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVcf5Type(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVcf5Cutoff(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVcf5Resonance(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVcf5Drive(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVcf5Gain(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVcf5ModDepth1(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVcf5ModDepth2(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVcf5KeyFollow(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVcf6Type(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVcf6Cutoff(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVcf6Resonance(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVcf6Drive(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVcf6Gain(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVcf6ModDepth1(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVcf6ModDepth2(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVcf6KeyFollow(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setSb1Frequency(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setSb1Fmodsource(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setSb1Fmoddepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setSb1Offset(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setSb1Omodsource(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setSb1Omoddepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setSb1Mix(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setSb1Mmodsource(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setSb1Mmoddepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setSb2Frequency(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setSb2Fmodsource(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setSb2Fmoddepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setSb2Offset(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setSb2Omodsource(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setSb2Omoddepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setSb2Mix(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setSb2Mmodsource(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setSb2Mmoddepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setSb3Frequency(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setSb3Fmodsource(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setSb3Fmoddepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setSb3Offset(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setSb3Omodsource(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setSb3Omoddepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setSb3Mix(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setSb3Mmodsource(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setSb3Mmoddepth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setPcoreMatrix5Source(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setPcoreMatrix5Depth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setPcoreMatrix5ViaSrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setPcoreMatrix5Via(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setPcoreMatrix6Source(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setPcoreMatrix6Depth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setPcoreMatrix6ViaSrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setPcoreMatrix6Via(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setPcoreMatrix7Source(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setPcoreMatrix7Depth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setPcoreMatrix7ViaSrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setPcoreMatrix7Via(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setPcoreMatrix8Source(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setPcoreMatrix8Depth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setPcoreMatrix8ViaSrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setPcoreMatrix8Via(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setPcoreMatrix9Source(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setPcoreMatrix9Depth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setPcoreMatrix9ViaSrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setPcoreMatrix9Via(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setPcoreMatrix10Source(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setPcoreMatrix10Depth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setPcoreMatrix10ViaSrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setPcoreMatrix10Via(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setPcoreMatrix11Source(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setPcoreMatrix11Depth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setPcoreMatrix11ViaSrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setPcoreMatrix11Via(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setPcoreMatrix12Source(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setPcoreMatrix12Depth(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setPcoreMatrix12ViaSrc(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setPcoreMatrix12Via(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setXmf3Type(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setXmf3Cutoff(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setXmf3Resonance(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setXmf3FreqMod1(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setXmf3FreqMod2(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setXmf3KeyFollow(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setXmf3FreqOffset(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setXmf3FreqOffMod(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setXmf3FilterFM(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setXmf3Xfmmod(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setXmf3Overload(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setXmf3Click(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setDist1Type(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setDist1Input(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setDist1Output(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setDist1PreTilt(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setDist1PostTilt(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setDist1CenterFreq(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setDist1Low(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setDist1High(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setDist1PostFilter(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setDist2Type(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setDist2Input(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setDist2Output(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setDist2PreTilt(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setDist2PostTilt(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setDist2CenterFreq(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setDist2Low(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setDist2High(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setDist2PostFilter(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setDist3Type(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setDist3Input(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setDist3Output(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setDist3PreTilt(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setDist3PostTilt(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setDist3CenterFreq(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setDist3Low(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setDist3High(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setDist3PostFilter(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setDist4Type(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setDist4Input(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setDist4Output(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setDist4PreTilt(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setDist4PostTilt(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setDist4CenterFreq(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setDist4Low(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setDist4High(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setDist4PostFilter(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFold1Ripples(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFold1Folds(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFold1FoldMod(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFold1FoldModSource(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFold1Bias(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFold1BiasMod(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFold1BiasModSource(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFold1FoldRatio(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFold1FoldSlope(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFold1ClipAngle(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFold2Ripples(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFold2Folds(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFold2FoldMod(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFold2FoldModSource(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFold2Bias(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFold2BiasMod(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFold2BiasModSource(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFold2FoldRatio(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFold2FoldSlope(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setFold2ClipAngle(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVca1Pan1(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVca1PanModSrc1(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVca1PanModDpt1(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVca1Volume1(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVca1Vca1(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVca1Modulation1(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVca1ModDepth1(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVca1Pan2(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVca1PanModSrc2(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVca1PanModDpt2(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVca1Volume2(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVca1Vca2(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVca1Modulation2(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVca1ModDepth2(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVca1Pan3(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVca1PanModSrc3(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVca1PanModDpt3(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVca1Volume3(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVca1Vca3(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVca1Modulation3(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVca1ModDepth3(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVca1Pan4(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVca1PanModSrc4(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVca1PanModDpt4(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVca1Volume4(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVca1Vca4(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVca1Modulation4(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVca1ModDepth4(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVca1Mute1(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVca1Mute2(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVca1Mute3(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVca1Mute4(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVca1Panning1(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVca1Panning2(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVca1Panning3(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVca1Panning4(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVca1Bus1(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVca1Bus2(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVca1Bus3(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVca1Bus4(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVca1Send1(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVca1SendMod1(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVca1SendDepth1(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVca1Send2(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVca1SendMod2(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setVca1SendDepth2(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setNuRev1PreDelay(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setNuRev1Damp(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setNuRev1Decay(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setNuRev1Size(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setNuRev1Tone(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setNuRev1Width(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setNuRev1DryWetMix(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setZmasReturn1(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setZmasReturn2(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    /**
     * @param {number} value a number between 0-1 to set the parameter to
     * @param {number} [timeInWholeNotes] time to insert automation point in
     *    quarter notes. If no time is supplied, set the initial value
     * @param {number} [curve=0] A number from [-1, 1] (inclusive), which
     *    represents the curvature of the line formed by this point and the next
     *    point. Zero implies a linear change. Higher values create a curve that
     *    begins slowly and accelerates. Lower values create a curve that begins
     *    quickly, and decelerates.
     */
    setZmasMaster(value: number, timeInWholeNotes?: number | undefined, curve?: number | undefined): {
        address: string;
        args: ({
            type: string;
            value: string;
        } | {
            type: string;
            value: number;
        })[];
    };
    params: {
        dryLevel: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        wetLevel: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        mainOutput: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        mainActiveLfog: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        mainActiveLfog2: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        pcoreX1: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        pcoreY1: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        pcoreX2: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        pcoreY2: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        pcoreX3: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        pcoreY3: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        pcoreX4: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        pcoreY4: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        pcoreMatrix1Source: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        pcoreMatrix1Depth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        pcoreMatrix1ViaSrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        pcoreMatrix1Via: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        pcoreMatrix2Source: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        pcoreMatrix2Depth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        pcoreMatrix2ViaSrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        pcoreMatrix2Via: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        pcoreMatrix3Source: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        pcoreMatrix3Depth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        pcoreMatrix3ViaSrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        pcoreMatrix3Via: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        pcoreMatrix4Source: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        pcoreMatrix4Depth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        pcoreMatrix4ViaSrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        pcoreMatrix4Via: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        lfogSync: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        lfogPhase: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        lfog2Sync: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        lfog2Phase: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vccActiveLfo1: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vccActiveLfo2: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vccActiveLfo3: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vccActiveLfo4: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vccVoices: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vccVoicing: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vccMode: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vccPortamento: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vccTranspose: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vccFineTuneCents: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vccArpStepModA1: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vccArpStepModA2: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vccArpStepModA3: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vccArpStepModA4: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vccArpStepModA5: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vccArpStepModA6: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vccArpStepModA7: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vccArpStepModA8: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vccArpStepModA9: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vccArpStepModA10: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vccArpStepModA11: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vccArpStepModA12: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vccArpStepModA13: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vccArpStepModA14: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vccArpStepModA15: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vccArpStepModA16: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        env1Init: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        env1Attack: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        env1Decay: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        env1Sustain: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        env1FallRise: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        env1Sustain2: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        env1Release: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        env1Velocity: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        env1Slope: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        env2Init: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        env2Attack: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        env2Decay: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        env2Sustain: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        env2FallRise: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        env2Sustain2: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        env2Release: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        env2Velocity: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        env2Slope: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        env3Init: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        env3Attack: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        env3Decay: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        env3Sustain: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        env3FallRise: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        env3Sustain2: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        env3Release: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        env3Velocity: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        env3Slope: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        env4Init: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        env4Attack: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        env4Decay: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        env4Sustain: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        env4FallRise: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        env4Sustain2: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        env4Release: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        env4Velocity: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        env4Slope: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        mseg1Velocity: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        mseg1Attack: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        mseg1Loop: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        mseg1Release: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        mseg2Velocity: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        mseg2Attack: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        mseg2Loop: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        mseg2Release: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        mseg3Velocity: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        mseg3Attack: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        mseg3Loop: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        mseg3Release: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        mseg4Velocity: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        mseg4Attack: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        mseg4Loop: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        mseg4Release: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        lfo1Sync: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        lfo1Delay: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        lfo2Sync: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        lfo2Delay: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        lfo3Sync: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        lfo3Delay: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        lfo4Sync: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        lfo4Delay: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        mmix1Constant: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        mmix2Constant: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        mmix3Constant: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        mmix4Constant: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc1Tune: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc1TuneModSrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc1TuneModDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc1Phase: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc1PhaseModSrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc1PhaseModDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc1WaveWarp: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc1WarpModSrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc1WarpModDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc1Vibrato: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc1SpectraFX1Val: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc1Sfx1modsrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc1Sfx1moddepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc1SpectraFX2Val: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc1Sfx2modsrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc1Sfx2moddepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc1Detune: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc1Volume: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc1VolumeModSrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc1VolumeModDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc1Pan: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc1PanModSrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc1PanModDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc1SyncTune: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc1SyncModSrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc1SyncModDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc1PolyWidth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc1Normalize: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc2Tune: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc2TuneModSrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc2TuneModDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc2Phase: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc2PhaseModSrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc2PhaseModDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc2WaveWarp: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc2WarpModSrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc2WarpModDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc2Vibrato: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc2SpectraFX1Val: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc2Sfx1modsrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc2Sfx1moddepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc2SpectraFX2Val: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc2Sfx2modsrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc2Sfx2moddepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc2Detune: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc2Volume: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc2VolumeModSrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc2VolumeModDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc2Pan: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc2PanModSrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc2PanModDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc2SyncTune: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc2SyncModSrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc2SyncModDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc2PolyWidth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc2Normalize: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc3Tune: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc3TuneModSrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc3TuneModDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc3Phase: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc3PhaseModSrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc3PhaseModDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc3WaveWarp: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc3WarpModSrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc3WarpModDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc3Vibrato: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc3SpectraFX1Val: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc3Sfx1modsrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc3Sfx1moddepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc3SpectraFX2Val: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc3Sfx2modsrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc3Sfx2moddepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc3Detune: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc3Volume: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc3VolumeModSrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc3VolumeModDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc3Pan: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc3PanModSrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc3PanModDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc3SyncTune: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc3SyncModSrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc3SyncModDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc3PolyWidth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc3Normalize: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc4Tune: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc4TuneModSrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc4TuneModDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc4Phase: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc4PhaseModSrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc4PhaseModDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc4WaveWarp: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc4WarpModSrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc4WarpModDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc4Vibrato: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc4SpectraFX1Val: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc4Sfx1modsrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc4Sfx1moddepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc4SpectraFX2Val: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc4Sfx2modsrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc4Sfx2moddepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc4Detune: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc4Volume: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc4VolumeModSrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc4VolumeModDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc4Pan: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc4PanModSrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc4PanModDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc4SyncTune: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc4SyncModSrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc4SyncModDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc4PolyWidth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        osc4Normalize: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        noise1Filter1: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        noise1F1ModSrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        noise1F1ModDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        noise1Filter2: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        noise1F2ModSrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        noise1F2ModDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        noise1Volume: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        noise1VolumeModSrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        noise1VolumeModDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        noise1Pan: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        noise1PanModSrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        noise1PanModDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        noise1Width: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        noise2Filter1: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        noise2F1ModSrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        noise2F1ModDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        noise2Filter2: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        noise2F2ModSrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        noise2F2ModDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        noise2Volume: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        noise2VolumeModSrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        noise2VolumeModDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        noise2Pan: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        noise2PanModSrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        noise2PanModDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        noise2Width: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vcf1Type: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vcf1Cutoff: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vcf1Resonance: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vcf1Drive: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vcf1Gain: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vcf1ModDepth1: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vcf1ModDepth2: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vcf1KeyFollow: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vcf2Type: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vcf2Cutoff: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vcf2Resonance: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vcf2Drive: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vcf2Gain: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vcf2ModDepth1: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vcf2ModDepth2: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vcf2KeyFollow: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vcf3Type: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vcf3Cutoff: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vcf3Resonance: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vcf3Drive: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vcf3Gain: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vcf3ModDepth1: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vcf3ModDepth2: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vcf3KeyFollow: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vcf4Type: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vcf4Cutoff: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vcf4Resonance: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vcf4Drive: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vcf4Gain: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vcf4ModDepth1: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vcf4ModDepth2: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vcf4KeyFollow: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fmo1Tune: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fmo1TuneModSrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fmo1TuneModDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fmo1FmDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fmo1FmModSrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fmo1FmModDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fmo1Vibrato: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fmo1Detune: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fmo1Volume: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fmo1VolumeModSrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fmo1VolumeModDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fmo1Pan: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fmo1PanModSrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fmo1PanModDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fmo1Width: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fmo2Tune: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fmo2TuneModSrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fmo2TuneModDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fmo2FmDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fmo2FmModSrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fmo2FmModDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fmo2Vibrato: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fmo2Detune: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fmo2Volume: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fmo2VolumeModSrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fmo2VolumeModDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fmo2Pan: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fmo2PanModSrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fmo2PanModDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fmo2Width: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fmo3Tune: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fmo3TuneModSrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fmo3TuneModDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fmo3FmDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fmo3FmModSrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fmo3FmModDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fmo3Vibrato: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fmo3Detune: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fmo3Volume: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fmo3VolumeModSrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fmo3VolumeModDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fmo3Pan: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fmo3PanModSrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fmo3PanModDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fmo3Width: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fmo4Tune: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fmo4TuneModSrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fmo4TuneModDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fmo4FmDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fmo4FmModSrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fmo4FmModDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fmo4Vibrato: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fmo4Detune: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fmo4Volume: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fmo4VolumeModSrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fmo4VolumeModDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fmo4Pan: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fmo4PanModSrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fmo4PanModDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fmo4Width: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        comb1Tune: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        comb1KeyScale: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        comb1TuneModDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        comb1Detune: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        comb1Vibrato: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        comb1Feedback: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        comb1Fbmoddepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        comb1Damp: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        comb1DampModDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        comb1PreFill: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        comb1Input: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        comb1InputMod: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        comb1Tone: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        comb1ToneMod: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        comb1Flavour: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        comb1FlavourMod: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        comb1Distortion: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        comb1Dry: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        comb1Volume: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        comb1VolumeModSrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        comb1VolumeModDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        comb1Pan: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        comb1PanModSrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        comb1PanModDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        comb1Width: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        comb2Tune: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        comb2KeyScale: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        comb2TuneModDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        comb2Detune: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        comb2Vibrato: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        comb2Feedback: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        comb2Fbmoddepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        comb2Damp: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        comb2DampModDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        comb2PreFill: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        comb2Input: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        comb2InputMod: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        comb2Tone: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        comb2ToneMod: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        comb2Flavour: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        comb2FlavourMod: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        comb2Distortion: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        comb2Dry: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        comb2Volume: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        comb2VolumeModSrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        comb2VolumeModDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        comb2Pan: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        comb2PanModSrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        comb2PanModDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        comb2Width: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        shape1Depth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        shape1DModSrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        shape1DModDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        shape1Edge: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        shape1EdgeModSrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        shape1EdgeModDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        shape1Input: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        shape1Output: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        shape1HiOut: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        shape2Depth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        shape2DModSrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        shape2DModDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        shape2Edge: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        shape2EdgeModSrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        shape2EdgeModDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        shape2Input: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        shape2Output: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        shape2HiOut: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        mix1Pan: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        mix1Mix: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        mix1PanMode: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        mix1PanModDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        mix1PanModSource: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        mix2Pan: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        mix2Mix: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        mix2PanMode: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        mix2PanModDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        mix2PanModSource: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        mix3Pan: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        mix3Mix: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        mix3PanMode: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        mix3PanModDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        mix3PanModSource: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        mix4Pan: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        mix4Mix: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        mix4PanMode: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        mix4PanModDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        mix4PanModSource: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        xmf1Type: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        xmf1Cutoff: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        xmf1Resonance: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        xmf1FreqMod1: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        xmf1FreqMod2: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        xmf1KeyFollow: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        xmf1FreqOffset: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        xmf1FreqOffMod: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        xmf1FilterFM: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        xmf1Xfmmod: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        xmf1Overload: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        xmf1Click: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        xmf2Type: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        xmf2Cutoff: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        xmf2Resonance: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        xmf2FreqMod1: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        xmf2FreqMod2: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        xmf2KeyFollow: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        xmf2FreqOffset: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        xmf2FreqOffMod: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        xmf2FilterFM: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        xmf2Xfmmod: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        xmf2Overload: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        xmf2Click: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        modFX1Center: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        modFX1Speed: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        modFX1Stereo: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        modFX1Depth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        modFX1Feedback: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        modFX1Mix: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        modFX1LowCutFreq: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        modFX1HiCutFreq: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        modFX1Quad: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        modFX1QuadPhase: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        modFX1LowBoostDb: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        modFX1HighBoostDb: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        modFX2Center: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        modFX2Speed: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        modFX2Stereo: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        modFX2Depth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        modFX2Feedback: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        modFX2Mix: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        modFX2LowCutFreq: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        modFX2HiCutFreq: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        modFX2Quad: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        modFX2QuadPhase: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        modFX2LowBoostDb: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        modFX2HighBoostDb: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        delay1Mix: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        delay1Feedback: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        delay1XBack: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        delay1Lowpass: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        delay1Hipass: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        delay2Mix: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        delay2Feedback: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        delay2XBack: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        delay2Lowpass: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        delay2Hipass: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        shape3Depth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        shape3DModSrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        shape3DModDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        shape3Edge: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        shape3EdgeModSrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        shape3EdgeModDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        shape3Input: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        shape3Output: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        shape3HiOut: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        shape4Depth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        shape4DModSrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        shape4DModDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        shape4Edge: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        shape4EdgeModSrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        shape4EdgeModDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        shape4Input: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        shape4Output: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        shape4HiOut: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        mix5Pan: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        mix5Mix: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        mix5PanMode: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        mix5PanModDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        mix5PanModSource: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        mix6Pan: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        mix6Mix: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        mix6PanMode: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        mix6PanModDepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        mix6PanModSource: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        rev1Dry: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        rev1Wet: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        rev1Feedback: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        rev1Damp: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        rev1Range: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        rev1Speed: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        rev1Modulation: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        rev1DiffFeedback: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        rev1DiffRange: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        rev1DiffMix: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        rev1DiffMod: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        rev1DiffSpeed: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        comp1Compression: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        comp1Threshold: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        comp1Attack: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        comp1Release: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        comp1Input: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        comp1Output: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        comp2Compression: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        comp2Threshold: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        comp2Attack: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        comp2Release: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        comp2Input: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        comp2Output: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        eq1FreqLowShelf: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        eq1QLowShelf: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        eq1GainLowShelf: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        eq1FreqMid1: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        eq1QMid1: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        eq1GainMid1: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        eq1FreqMid2: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        eq1QMid2: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        eq1GainMid2: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        eq1FreqHiShelf: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        eq1QHiShelf: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        eq1GainHiShelf: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        eq2FreqLowShelf: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        eq2QLowShelf: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        eq2GainLowShelf: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        eq2FreqMid1: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        eq2QMid1: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        eq2GainMid1: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        eq2FreqMid2: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        eq2QMid2: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        eq2GainMid2: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        eq2FreqHiShelf: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        eq2QHiShelf: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        eq2GainHiShelf: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vcf5Type: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vcf5Cutoff: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vcf5Resonance: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vcf5Drive: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vcf5Gain: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vcf5ModDepth1: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vcf5ModDepth2: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vcf5KeyFollow: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vcf6Type: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vcf6Cutoff: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vcf6Resonance: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vcf6Drive: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vcf6Gain: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vcf6ModDepth1: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vcf6ModDepth2: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vcf6KeyFollow: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        sb1Frequency: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        sb1Fmodsource: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        sb1Fmoddepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        sb1Offset: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        sb1Omodsource: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        sb1Omoddepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        sb1Mix: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        sb1Mmodsource: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        sb1Mmoddepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        sb2Frequency: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        sb2Fmodsource: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        sb2Fmoddepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        sb2Offset: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        sb2Omodsource: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        sb2Omoddepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        sb2Mix: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        sb2Mmodsource: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        sb2Mmoddepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        sb3Frequency: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        sb3Fmodsource: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        sb3Fmoddepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        sb3Offset: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        sb3Omodsource: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        sb3Omoddepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        sb3Mix: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        sb3Mmodsource: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        sb3Mmoddepth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        pcoreMatrix5Source: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        pcoreMatrix5Depth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        pcoreMatrix5ViaSrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        pcoreMatrix5Via: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        pcoreMatrix6Source: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        pcoreMatrix6Depth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        pcoreMatrix6ViaSrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        pcoreMatrix6Via: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        pcoreMatrix7Source: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        pcoreMatrix7Depth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        pcoreMatrix7ViaSrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        pcoreMatrix7Via: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        pcoreMatrix8Source: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        pcoreMatrix8Depth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        pcoreMatrix8ViaSrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        pcoreMatrix8Via: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        pcoreMatrix9Source: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        pcoreMatrix9Depth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        pcoreMatrix9ViaSrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        pcoreMatrix9Via: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        pcoreMatrix10Source: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        pcoreMatrix10Depth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        pcoreMatrix10ViaSrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        pcoreMatrix10Via: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        pcoreMatrix11Source: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        pcoreMatrix11Depth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        pcoreMatrix11ViaSrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        pcoreMatrix11Via: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        pcoreMatrix12Source: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        pcoreMatrix12Depth: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        pcoreMatrix12ViaSrc: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        pcoreMatrix12Via: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        xmf3Type: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        xmf3Cutoff: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        xmf3Resonance: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        xmf3FreqMod1: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        xmf3FreqMod2: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        xmf3KeyFollow: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        xmf3FreqOffset: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        xmf3FreqOffMod: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        xmf3FilterFM: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        xmf3Xfmmod: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        xmf3Overload: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        xmf3Click: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        dist1Type: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        dist1Input: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        dist1Output: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        dist1PreTilt: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        dist1PostTilt: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        dist1CenterFreq: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        dist1Low: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        dist1High: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        dist1PostFilter: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        dist2Type: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        dist2Input: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        dist2Output: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        dist2PreTilt: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        dist2PostTilt: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        dist2CenterFreq: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        dist2Low: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        dist2High: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        dist2PostFilter: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        dist3Type: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        dist3Input: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        dist3Output: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        dist3PreTilt: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        dist3PostTilt: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        dist3CenterFreq: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        dist3Low: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        dist3High: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        dist3PostFilter: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        dist4Type: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        dist4Input: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        dist4Output: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        dist4PreTilt: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        dist4PostTilt: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        dist4CenterFreq: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        dist4Low: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        dist4High: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        dist4PostFilter: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fold1Ripples: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fold1Folds: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fold1FoldMod: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fold1FoldModSource: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fold1Bias: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fold1BiasMod: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fold1BiasModSource: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fold1FoldRatio: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fold1FoldSlope: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fold1ClipAngle: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fold2Ripples: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fold2Folds: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fold2FoldMod: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fold2FoldModSource: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fold2Bias: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fold2BiasMod: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fold2BiasModSource: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fold2FoldRatio: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fold2FoldSlope: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        fold2ClipAngle: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vca1Pan1: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vca1PanModSrc1: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vca1PanModDpt1: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vca1Volume1: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vca1Vca1: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vca1Modulation1: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vca1ModDepth1: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vca1Pan2: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vca1PanModSrc2: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vca1PanModDpt2: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vca1Volume2: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vca1Vca2: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vca1Modulation2: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vca1ModDepth2: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vca1Pan3: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vca1PanModSrc3: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vca1PanModDpt3: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vca1Volume3: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vca1Vca3: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vca1Modulation3: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vca1ModDepth3: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vca1Pan4: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vca1PanModSrc4: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vca1PanModDpt4: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vca1Volume4: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vca1Vca4: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vca1Modulation4: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vca1ModDepth4: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vca1Mute1: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vca1Mute2: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vca1Mute3: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vca1Mute4: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vca1Panning1: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vca1Panning2: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vca1Panning3: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vca1Panning4: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vca1Bus1: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vca1Bus2: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vca1Bus3: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vca1Bus4: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vca1Send1: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vca1SendMod1: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vca1SendDepth1: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vca1Send2: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vca1SendMod2: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        vca1SendDepth2: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        nuRev1PreDelay: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        nuRev1Damp: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        nuRev1Decay: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        nuRev1Size: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        nuRev1Tone: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        nuRev1Width: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        nuRev1DryWetMix: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        zmasReturn1: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        zmasReturn2: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
        zmasMaster: {
            name: string;
            units: undefined;
            normalize: undefined;
        };
    };
};
export = _exports;
