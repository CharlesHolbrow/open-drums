/**
 * Clear all MIDI notes in the currently selected clip.
 */
export declare function clear(): {
    address: string;
};
/**
 * Select a MIDI clip by name on the currently selected track. Create the clip
 * if it does not exist. Set the clip's start time and length in whole notes.
 * @param {string} name name of the MIDI clip to select.
 * @param {number} startTimeInWholeNotes
 * @param {number} durationInWholeNotes
 */
export declare function select(name: any, startTimeInWholeNotes: any, durationInWholeNotes: any): {
    address: string;
    args: ({
        type: string;
        value: string;
    } | {
        type: string;
        value: number;
    })[];
};
/**
 * Create an /midiclip/n message
 * @param {Integer} noteNum MIDI Note Number
 * @param {Number} startTimeInWholeNotes Note start time in whole notes
 * @param {Number} [durationInWholeNotes=0.25] Note length in whole notes
 * @param {Integer} [velocity] Optional MIDI note velocity.
 */
export declare function note(noteNum: any, startTimeInWholeNotes: any, durationInWholeNotes: number | undefined, velocity: any): {
    address: string;
    args: {
        type: string;
        value: any;
    }[];
};
/**
 * Build an OSC message that creates a clip with a bunch of midi notes
 * @param { string } clipName name of the clip.
 * @param { number } startTimeInWholeNotes clip start time in whole notes
 * @param { number} durationInWholeNotes clip length in whole notes
 * @param { Object[] } notes array of objects, which look like:
 *    `{ duration: lengthWholeNotes, n: midiNoteNumber, startTime: startTimeWholeNotes }`
 */
export declare function create(clipName: any, startTimeInWholeNotes: any, durationInWholeNotes: any, notes: any): {
    address: string;
}[];
