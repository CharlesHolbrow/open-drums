import { FluidPlugin } from '../FluidPlugin';
import { PluginAutomation } from '../techniques';
export interface TyrellN6Vst2Parameters {
    /** value from 0 to 200 */
    mainOutput?: number;
    pcoreMatrix1Source?: number;
    /** value from -100 to 100 */
    pcoreMatrix1Depth?: number;
    pcoreMatrix1ViaSrc?: number;
    /** value from -100 to 100 */
    pcoreMatrix1Via?: number;
    pcoreMatrix2Source?: number;
    /** value from -100 to 100 */
    pcoreMatrix2Depth?: number;
    pcoreMatrix2ViaSrc?: number;
    /** value from -100 to 100 */
    pcoreMatrix2Via?: number;
    vccVoiceStack?: number;
    vccMode?: number;
    vccGlideMode?: number;
    /** value from 0 to 100 */
    vccGlide?: number;
    /** value from -100 to 100 */
    vccGlide2?: number;
    /** value from 0 to 100 */
    vccPortaRange?: number;
    vccPitchBendUp?: number;
    vccPitchBendDown?: number;
    /** value from -24 to 24 */
    vccTranspose?: number;
    /** value from 0 to 100 */
    env1Attack?: number;
    /** value from 0 to 100 */
    env1Decay?: number;
    /** value from 0 to 100 */
    env1Sustain?: number;
    /** value from -100 to 100 */
    env1FallRise?: number;
    /** value from 0 to 100 */
    env1Release?: number;
    /** value from 0 to 100 */
    env1Velocity?: number;
    /** value from -100 to 100 */
    env1KeyTrack?: number;
    env1Trigger?: number;
    /** value from 0 to 100 */
    env2Attack?: number;
    /** value from 0 to 100 */
    env2Decay?: number;
    /** value from 0 to 100 */
    env2Sustain?: number;
    /** value from -100 to 100 */
    env2FallRise?: number;
    /** value from 0 to 100 */
    env2Release?: number;
    /** value from 0 to 100 */
    env2Velocity?: number;
    /** value from -100 to 100 */
    env2KeyTrack?: number;
    env2Trigger?: number;
    /** value from 0.1 to 8 */
    lfo1Sync?: number;
    /** value from 0 to 100 */
    lfo1Delay?: number;
    /** value from 0.1 to 8 */
    lfo2Sync?: number;
    /** value from 0 to 100 */
    lfo2Delay?: number;
    /** value from 1 to 4 */
    tyrellShape1?: number;
    tyrellTuneModSrc1?: number;
    /** value from -24 to 24 */
    tyrellTuneModDepth1?: number;
    /** value from 1 to 2 */
    tyrellShape2?: number;
    /** value from 0 to 24 */
    tyrellTune2?: number;
    /** value from -50 to 50 */
    tyrellFineTune2?: number;
    tyrellTuneModSrc2?: number;
    /** value from -24 to 24 */
    tyrellTuneModDepth2?: number;
    /** value from 0 to 50 */
    tyrellPwdepth?: number;
    tyrellPwsrc?: number;
    /** value from -50 to 50 */
    tyrellDetune?: number;
    /** value from 0 to 100 */
    tyrellSoftSync?: number;
    /** value from 0 to 100 */
    tyrellVibrato?: number;
    tyrellRingModIn1?: number;
    tyrellRingModIn2?: number;
    /** value from 1 to 3 */
    tyrellNoiseColour?: number;
    /** value from -100 to 25 */
    tyrellOscVolume1?: number;
    /** value from -100 to 25 */
    tyrellOscVolume2?: number;
    /** value from -100 to 25 */
    tyrellSubVolume?: number;
    /** value from -100 to 25 */
    tyrellNoiseVolume?: number;
    /** value from -100 to 25 */
    tyrellRingModulator?: number;
    /** value from -100 to 25 */
    tyrellFeedback?: number;
    tyrellVcfmode?: number;
    tyrellVcfpoles?: number;
    /** value from 30 to 150 */
    tyrellCutoff?: number;
    tyrellFreqModSrc1?: number;
    /** value from -120 to 120 */
    tyrellFreqModDepth1?: number;
    tyrellFreqModSrc2?: number;
    /** value from -120 to 120 */
    tyrellFreqModDepth2?: number;
    /** value from 0 to 100 */
    tyrellKeyFollow?: number;
    /** value from 0 to 100 */
    tyrellResonance?: number;
    /** value from 0 to 100 */
    tyrellMixSpread?: number;
    tyrellAudioRateSrc?: number;
    tyrellAudioRateDest?: number;
    /** value from 0 to 100 */
    tyrellXmoddepth?: number;
    tyrellAudioRateModSrc?: number;
    chrs1Type?: number;
    /** value from 0 to 100 */
    chrs1Rate?: number;
    /** value from 0 to 100 */
    chrs1Depth?: number;
    /** value from 0 to 100 */
    chrs1Wet?: number;
    lfo1Restart?: number;
    lfo1Waveform?: number;
    /** value from 0 to 100 */
    lfo1Phase?: number;
    lfo1Polarity?: number;
    /** value from 0 to 100 */
    lfo1DepthModDpt1?: number;
    /** value from -5 to 5 */
    lfo1Rate?: number;
    /** value from -5 to 5 */
    lfo1FreqModDpt?: number;
    lfo2Restart?: number;
    lfo2Waveform?: number;
    /** value from 0 to 100 */
    lfo2Phase?: number;
    lfo2Polarity?: number;
    /** value from 0 to 100 */
    lfo2DepthModDpt1?: number;
    /** value from -5 to 5 */
    lfo2Rate?: number;
    /** value from -5 to 5 */
    lfo2FreqModDpt?: number;
}
export declare class TyrellN6Vst2 extends FluidPlugin {
    readonly parameters: TyrellN6Vst2Parameters;
    constructor(parameters?: TyrellN6Vst2Parameters);
    readonly parameterLibrary: {
        mainOutput: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        pcoreMatrix1Source: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                none: number;
                modwhl: number;
                pitchw: number;
                breath: number;
                xpress: number;
                gate: number;
                velocity: number;
                pressure: number;
                keyfollow: number;
                keyfollow2: number;
                alternate: number;
                random: number;
                stackvoice: number;
                adsr1: number;
                adsr2: number;
                lfo1: number;
                lfo2: number;
            };
        };
        pcoreMatrix1Depth: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        pcoreMatrix1ViaSrc: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                none: number;
                modwhl: number;
                pitchw: number;
                breath: number;
                xpress: number;
                gate: number;
                velocity: number;
                pressure: number;
                keyfollow: number;
                keyfollow2: number;
                alternate: number;
                random: number;
                stackvoice: number;
                adsr1: number;
                adsr2: number;
                lfo1: number;
                lfo2: number;
            };
        };
        pcoreMatrix1Via: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        pcoreMatrix2Source: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                none: number;
                modwhl: number;
                pitchw: number;
                breath: number;
                xpress: number;
                gate: number;
                velocity: number;
                pressure: number;
                keyfollow: number;
                keyfollow2: number;
                alternate: number;
                random: number;
                stackvoice: number;
                adsr1: number;
                adsr2: number;
                lfo1: number;
                lfo2: number;
            };
        };
        pcoreMatrix2Depth: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        pcoreMatrix2ViaSrc: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                none: number;
                modwhl: number;
                pitchw: number;
                breath: number;
                xpress: number;
                gate: number;
                velocity: number;
                pressure: number;
                keyfollow: number;
                keyfollow2: number;
                alternate: number;
                random: number;
                stackvoice: number;
                adsr1: number;
                adsr2: number;
                lfo1: number;
                lfo2: number;
            };
        };
        pcoreMatrix2Via: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        vccVoiceStack: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                "1.00": number;
                "2.00": number;
                "3.00": number;
                "4.00": number;
                "5.00": number;
                "6.00": number;
                "7.00": number;
                "8.00": number;
            };
        };
        vccMode: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                poly: number;
                mono: number;
                legato: number;
                duo: number;
            };
        };
        vccGlideMode: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                time: number;
                rate: number;
            };
        };
        vccGlide: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        vccGlide2: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        vccPortaRange: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        vccPitchBendUp: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                "0.00": number;
                "1.00": number;
                "2.00": number;
                "3.00": number;
                "4.00": number;
                "5.00": number;
                "6.00": number;
                "7.00": number;
                "8.00": number;
                "9.00": number;
                "10.00": number;
                "11.00": number;
                "12.00": number;
                "13.00": number;
                "14.00": number;
                "15.00": number;
                "16.00": number;
                "17.00": number;
                "18.00": number;
                "19.00": number;
                "20.00": number;
                "21.00": number;
                "22.00": number;
                "23.00": number;
                "24.00": number;
            };
        };
        vccPitchBendDown: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                "0.00": number;
                "1.00": number;
                "2.00": number;
                "3.00": number;
                "4.00": number;
                "5.00": number;
                "6.00": number;
                "7.00": number;
                "8.00": number;
                "9.00": number;
                "10.00": number;
                "11.00": number;
                "12.00": number;
                "13.00": number;
                "14.00": number;
                "15.00": number;
                "16.00": number;
                "17.00": number;
                "18.00": number;
                "19.00": number;
                "20.00": number;
                "21.00": number;
                "22.00": number;
                "23.00": number;
                "24.00": number;
            };
        };
        vccTranspose: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        env1Attack: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        env1Decay: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        env1Sustain: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        env1FallRise: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        env1Release: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        env1Velocity: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        env1KeyTrack: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        env1Trigger: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                gate: number;
                loop: number;
                lfo1: number;
                lfo2: number;
            };
        };
        env2Attack: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        env2Decay: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        env2Sustain: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        env2FallRise: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        env2Release: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        env2Velocity: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        env2KeyTrack: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        env2Trigger: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                gate: number;
                single: number;
                loop: number;
                lfo1: number;
                lfo2: number;
            };
        };
        lfo1Sync: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        lfo1Delay: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        lfo2Sync: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        lfo2Delay: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        tyrellShape1: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        tyrellTuneModSrc1: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                none: number;
                modwhl: number;
                pitchw: number;
                breath: number;
                xpress: number;
                gate: number;
                velocity: number;
                pressure: number;
                keyfollow: number;
                keyfollow2: number;
                alternate: number;
                random: number;
                stackvoice: number;
                adsr1: number;
                adsr2: number;
                lfo1: number;
                lfo2: number;
            };
        };
        tyrellTuneModDepth1: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        tyrellShape2: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        tyrellTune2: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        tyrellFineTune2: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        tyrellTuneModSrc2: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                none: number;
                modwhl: number;
                pitchw: number;
                breath: number;
                xpress: number;
                gate: number;
                velocity: number;
                pressure: number;
                keyfollow: number;
                keyfollow2: number;
                alternate: number;
                random: number;
                stackvoice: number;
                adsr1: number;
                adsr2: number;
                lfo1: number;
                lfo2: number;
            };
        };
        tyrellTuneModDepth2: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        tyrellPwdepth: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        tyrellPwsrc: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                none: number;
                modwhl: number;
                pitchw: number;
                breath: number;
                xpress: number;
                gate: number;
                velocity: number;
                pressure: number;
                keyfollow: number;
                keyfollow2: number;
                alternate: number;
                random: number;
                stackvoice: number;
                adsr1: number;
                adsr2: number;
                lfo1: number;
                lfo2: number;
            };
        };
        tyrellDetune: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        tyrellSoftSync: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        tyrellVibrato: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        tyrellRingModIn1: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                osc1: number;
                osc2: number;
                subosc: number;
                "osc1+2": number;
                "osc1+sub": number;
                vcf: number;
            };
        };
        tyrellRingModIn2: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                osc1: number;
                osc2: number;
                subosc: number;
            };
        };
        tyrellNoiseColour: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        tyrellOscVolume1: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        tyrellOscVolume2: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        tyrellSubVolume: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        tyrellNoiseVolume: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        tyrellRingModulator: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        tyrellFeedback: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        tyrellVcfmode: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                "lp / hp": number;
                bp: number;
            };
        };
        tyrellVcfpoles: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                "12 db/oct": number;
                "24 db/oct": number;
                "36 db/oct": number;
            };
        };
        tyrellCutoff: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        tyrellFreqModSrc1: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                none: number;
                modwhl: number;
                pitchw: number;
                breath: number;
                xpress: number;
                gate: number;
                velocity: number;
                pressure: number;
                keyfollow: number;
                keyfollow2: number;
                alternate: number;
                random: number;
                stackvoice: number;
                adsr1: number;
                adsr2: number;
                lfo1: number;
                lfo2: number;
            };
        };
        tyrellFreqModDepth1: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        tyrellFreqModSrc2: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                none: number;
                modwhl: number;
                pitchw: number;
                breath: number;
                xpress: number;
                gate: number;
                velocity: number;
                pressure: number;
                keyfollow: number;
                keyfollow2: number;
                alternate: number;
                random: number;
                stackvoice: number;
                adsr1: number;
                adsr2: number;
                lfo1: number;
                lfo2: number;
            };
        };
        tyrellFreqModDepth2: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        tyrellKeyFollow: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        tyrellResonance: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        tyrellMixSpread: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        tyrellAudioRateSrc: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                osc1: number;
            };
        };
        tyrellAudioRateDest: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                "osc2 fm": number;
                "osc2 pwm": number;
                filterfm: number;
            };
        };
        tyrellXmoddepth: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        tyrellAudioRateModSrc: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                none: number;
                modwhl: number;
                pitchw: number;
                breath: number;
                xpress: number;
                gate: number;
                velocity: number;
                pressure: number;
                keyfollow: number;
                keyfollow2: number;
                alternate: number;
                random: number;
                stackvoice: number;
                adsr1: number;
                adsr2: number;
                lfo1: number;
                lfo2: number;
            };
        };
        chrs1Type: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                classic: number;
                dramatic: number;
                ensemble: number;
            };
        };
        chrs1Rate: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        chrs1Depth: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        chrs1Wet: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        lfo1Restart: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                sync: number;
                gate: number;
                single: number;
                random: number;
            };
        };
        lfo1Waveform: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                sine: number;
                triangle: number;
                "saw up": number;
                "saw down": number;
                "sqr hi-lo": number;
                "sqr lo-hi": number;
                "rand hold": number;
                "rand glide": number;
            };
        };
        lfo1Phase: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        lfo1Polarity: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                bipolar: number;
                positive: number;
            };
        };
        lfo1DepthModDpt1: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        lfo1Rate: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        lfo1FreqModDpt: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        lfo2Restart: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                sync: number;
                gate: number;
                single: number;
                random: number;
            };
        };
        lfo2Waveform: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                sine: number;
                triangle: number;
                "saw up": number;
                "saw down": number;
                "sqr hi-lo": number;
                "sqr lo-hi": number;
                "rand hold": number;
                "rand glide": number;
            };
        };
        lfo2Phase: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        lfo2Polarity: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                bipolar: number;
                positive: number;
            };
        };
        lfo2DepthModDpt1: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        lfo2Rate: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        lfo2FreqModDpt: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
    };
    readonly makeAutomation: {
        mainOutput(value?: number | undefined, curve?: number): PluginAutomation;
        pcoreMatrix1Source(value?: number | undefined, curve?: number): PluginAutomation;
        pcoreMatrix1Depth(value?: number | undefined, curve?: number): PluginAutomation;
        pcoreMatrix1ViaSrc(value?: number | undefined, curve?: number): PluginAutomation;
        pcoreMatrix1Via(value?: number | undefined, curve?: number): PluginAutomation;
        pcoreMatrix2Source(value?: number | undefined, curve?: number): PluginAutomation;
        pcoreMatrix2Depth(value?: number | undefined, curve?: number): PluginAutomation;
        pcoreMatrix2ViaSrc(value?: number | undefined, curve?: number): PluginAutomation;
        pcoreMatrix2Via(value?: number | undefined, curve?: number): PluginAutomation;
        vccVoiceStack(value?: number | undefined, curve?: number): PluginAutomation;
        vccMode(value?: number | undefined, curve?: number): PluginAutomation;
        vccGlideMode(value?: number | undefined, curve?: number): PluginAutomation;
        vccGlide(value?: number | undefined, curve?: number): PluginAutomation;
        vccGlide2(value?: number | undefined, curve?: number): PluginAutomation;
        vccPortaRange(value?: number | undefined, curve?: number): PluginAutomation;
        vccPitchBendUp(value?: number | undefined, curve?: number): PluginAutomation;
        vccPitchBendDown(value?: number | undefined, curve?: number): PluginAutomation;
        vccTranspose(value?: number | undefined, curve?: number): PluginAutomation;
        env1Attack(value?: number | undefined, curve?: number): PluginAutomation;
        env1Decay(value?: number | undefined, curve?: number): PluginAutomation;
        env1Sustain(value?: number | undefined, curve?: number): PluginAutomation;
        env1FallRise(value?: number | undefined, curve?: number): PluginAutomation;
        env1Release(value?: number | undefined, curve?: number): PluginAutomation;
        env1Velocity(value?: number | undefined, curve?: number): PluginAutomation;
        env1KeyTrack(value?: number | undefined, curve?: number): PluginAutomation;
        env1Trigger(value?: number | undefined, curve?: number): PluginAutomation;
        env2Attack(value?: number | undefined, curve?: number): PluginAutomation;
        env2Decay(value?: number | undefined, curve?: number): PluginAutomation;
        env2Sustain(value?: number | undefined, curve?: number): PluginAutomation;
        env2FallRise(value?: number | undefined, curve?: number): PluginAutomation;
        env2Release(value?: number | undefined, curve?: number): PluginAutomation;
        env2Velocity(value?: number | undefined, curve?: number): PluginAutomation;
        env2KeyTrack(value?: number | undefined, curve?: number): PluginAutomation;
        env2Trigger(value?: number | undefined, curve?: number): PluginAutomation;
        lfo1Sync(value?: number | undefined, curve?: number): PluginAutomation;
        lfo1Delay(value?: number | undefined, curve?: number): PluginAutomation;
        lfo2Sync(value?: number | undefined, curve?: number): PluginAutomation;
        lfo2Delay(value?: number | undefined, curve?: number): PluginAutomation;
        tyrellShape1(value?: number | undefined, curve?: number): PluginAutomation;
        tyrellTuneModSrc1(value?: number | undefined, curve?: number): PluginAutomation;
        tyrellTuneModDepth1(value?: number | undefined, curve?: number): PluginAutomation;
        tyrellShape2(value?: number | undefined, curve?: number): PluginAutomation;
        tyrellTune2(value?: number | undefined, curve?: number): PluginAutomation;
        tyrellFineTune2(value?: number | undefined, curve?: number): PluginAutomation;
        tyrellTuneModSrc2(value?: number | undefined, curve?: number): PluginAutomation;
        tyrellTuneModDepth2(value?: number | undefined, curve?: number): PluginAutomation;
        tyrellPwdepth(value?: number | undefined, curve?: number): PluginAutomation;
        tyrellPwsrc(value?: number | undefined, curve?: number): PluginAutomation;
        tyrellDetune(value?: number | undefined, curve?: number): PluginAutomation;
        tyrellSoftSync(value?: number | undefined, curve?: number): PluginAutomation;
        tyrellVibrato(value?: number | undefined, curve?: number): PluginAutomation;
        tyrellRingModIn1(value?: number | undefined, curve?: number): PluginAutomation;
        tyrellRingModIn2(value?: number | undefined, curve?: number): PluginAutomation;
        tyrellNoiseColour(value?: number | undefined, curve?: number): PluginAutomation;
        tyrellOscVolume1(value?: number | undefined, curve?: number): PluginAutomation;
        tyrellOscVolume2(value?: number | undefined, curve?: number): PluginAutomation;
        tyrellSubVolume(value?: number | undefined, curve?: number): PluginAutomation;
        tyrellNoiseVolume(value?: number | undefined, curve?: number): PluginAutomation;
        tyrellRingModulator(value?: number | undefined, curve?: number): PluginAutomation;
        tyrellFeedback(value?: number | undefined, curve?: number): PluginAutomation;
        tyrellVcfmode(value?: number | undefined, curve?: number): PluginAutomation;
        tyrellVcfpoles(value?: number | undefined, curve?: number): PluginAutomation;
        tyrellCutoff(value?: number | undefined, curve?: number): PluginAutomation;
        tyrellFreqModSrc1(value?: number | undefined, curve?: number): PluginAutomation;
        tyrellFreqModDepth1(value?: number | undefined, curve?: number): PluginAutomation;
        tyrellFreqModSrc2(value?: number | undefined, curve?: number): PluginAutomation;
        tyrellFreqModDepth2(value?: number | undefined, curve?: number): PluginAutomation;
        tyrellKeyFollow(value?: number | undefined, curve?: number): PluginAutomation;
        tyrellResonance(value?: number | undefined, curve?: number): PluginAutomation;
        tyrellMixSpread(value?: number | undefined, curve?: number): PluginAutomation;
        tyrellAudioRateSrc(value?: number | undefined, curve?: number): PluginAutomation;
        tyrellAudioRateDest(value?: number | undefined, curve?: number): PluginAutomation;
        tyrellXmoddepth(value?: number | undefined, curve?: number): PluginAutomation;
        tyrellAudioRateModSrc(value?: number | undefined, curve?: number): PluginAutomation;
        chrs1Type(value?: number | undefined, curve?: number): PluginAutomation;
        chrs1Rate(value?: number | undefined, curve?: number): PluginAutomation;
        chrs1Depth(value?: number | undefined, curve?: number): PluginAutomation;
        chrs1Wet(value?: number | undefined, curve?: number): PluginAutomation;
        lfo1Restart(value?: number | undefined, curve?: number): PluginAutomation;
        lfo1Waveform(value?: number | undefined, curve?: number): PluginAutomation;
        lfo1Phase(value?: number | undefined, curve?: number): PluginAutomation;
        lfo1Polarity(value?: number | undefined, curve?: number): PluginAutomation;
        lfo1DepthModDpt1(value?: number | undefined, curve?: number): PluginAutomation;
        lfo1Rate(value?: number | undefined, curve?: number): PluginAutomation;
        lfo1FreqModDpt(value?: number | undefined, curve?: number): PluginAutomation;
        lfo2Restart(value?: number | undefined, curve?: number): PluginAutomation;
        lfo2Waveform(value?: number | undefined, curve?: number): PluginAutomation;
        lfo2Phase(value?: number | undefined, curve?: number): PluginAutomation;
        lfo2Polarity(value?: number | undefined, curve?: number): PluginAutomation;
        lfo2DepthModDpt1(value?: number | undefined, curve?: number): PluginAutomation;
        lfo2Rate(value?: number | undefined, curve?: number): PluginAutomation;
        lfo2FreqModDpt(value?: number | undefined, curve?: number): PluginAutomation;
    };
    static readonly parameterLibrary: {
        mainOutput: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        pcoreMatrix1Source: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                none: number;
                modwhl: number;
                pitchw: number;
                breath: number;
                xpress: number;
                gate: number;
                velocity: number;
                pressure: number;
                keyfollow: number;
                keyfollow2: number;
                alternate: number;
                random: number;
                stackvoice: number;
                adsr1: number;
                adsr2: number;
                lfo1: number;
                lfo2: number;
            };
        };
        pcoreMatrix1Depth: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        pcoreMatrix1ViaSrc: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                none: number;
                modwhl: number;
                pitchw: number;
                breath: number;
                xpress: number;
                gate: number;
                velocity: number;
                pressure: number;
                keyfollow: number;
                keyfollow2: number;
                alternate: number;
                random: number;
                stackvoice: number;
                adsr1: number;
                adsr2: number;
                lfo1: number;
                lfo2: number;
            };
        };
        pcoreMatrix1Via: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        pcoreMatrix2Source: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                none: number;
                modwhl: number;
                pitchw: number;
                breath: number;
                xpress: number;
                gate: number;
                velocity: number;
                pressure: number;
                keyfollow: number;
                keyfollow2: number;
                alternate: number;
                random: number;
                stackvoice: number;
                adsr1: number;
                adsr2: number;
                lfo1: number;
                lfo2: number;
            };
        };
        pcoreMatrix2Depth: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        pcoreMatrix2ViaSrc: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                none: number;
                modwhl: number;
                pitchw: number;
                breath: number;
                xpress: number;
                gate: number;
                velocity: number;
                pressure: number;
                keyfollow: number;
                keyfollow2: number;
                alternate: number;
                random: number;
                stackvoice: number;
                adsr1: number;
                adsr2: number;
                lfo1: number;
                lfo2: number;
            };
        };
        pcoreMatrix2Via: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        vccVoiceStack: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                "1.00": number;
                "2.00": number;
                "3.00": number;
                "4.00": number;
                "5.00": number;
                "6.00": number;
                "7.00": number;
                "8.00": number;
            };
        };
        vccMode: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                poly: number;
                mono: number;
                legato: number;
                duo: number;
            };
        };
        vccGlideMode: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                time: number;
                rate: number;
            };
        };
        vccGlide: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        vccGlide2: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        vccPortaRange: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        vccPitchBendUp: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                "0.00": number;
                "1.00": number;
                "2.00": number;
                "3.00": number;
                "4.00": number;
                "5.00": number;
                "6.00": number;
                "7.00": number;
                "8.00": number;
                "9.00": number;
                "10.00": number;
                "11.00": number;
                "12.00": number;
                "13.00": number;
                "14.00": number;
                "15.00": number;
                "16.00": number;
                "17.00": number;
                "18.00": number;
                "19.00": number;
                "20.00": number;
                "21.00": number;
                "22.00": number;
                "23.00": number;
                "24.00": number;
            };
        };
        vccPitchBendDown: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                "0.00": number;
                "1.00": number;
                "2.00": number;
                "3.00": number;
                "4.00": number;
                "5.00": number;
                "6.00": number;
                "7.00": number;
                "8.00": number;
                "9.00": number;
                "10.00": number;
                "11.00": number;
                "12.00": number;
                "13.00": number;
                "14.00": number;
                "15.00": number;
                "16.00": number;
                "17.00": number;
                "18.00": number;
                "19.00": number;
                "20.00": number;
                "21.00": number;
                "22.00": number;
                "23.00": number;
                "24.00": number;
            };
        };
        vccTranspose: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        env1Attack: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        env1Decay: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        env1Sustain: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        env1FallRise: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        env1Release: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        env1Velocity: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        env1KeyTrack: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        env1Trigger: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                gate: number;
                loop: number;
                lfo1: number;
                lfo2: number;
            };
        };
        env2Attack: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        env2Decay: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        env2Sustain: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        env2FallRise: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        env2Release: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        env2Velocity: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        env2KeyTrack: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        env2Trigger: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                gate: number;
                single: number;
                loop: number;
                lfo1: number;
                lfo2: number;
            };
        };
        lfo1Sync: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        lfo1Delay: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        lfo2Sync: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        lfo2Delay: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        tyrellShape1: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        tyrellTuneModSrc1: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                none: number;
                modwhl: number;
                pitchw: number;
                breath: number;
                xpress: number;
                gate: number;
                velocity: number;
                pressure: number;
                keyfollow: number;
                keyfollow2: number;
                alternate: number;
                random: number;
                stackvoice: number;
                adsr1: number;
                adsr2: number;
                lfo1: number;
                lfo2: number;
            };
        };
        tyrellTuneModDepth1: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        tyrellShape2: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        tyrellTune2: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        tyrellFineTune2: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        tyrellTuneModSrc2: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                none: number;
                modwhl: number;
                pitchw: number;
                breath: number;
                xpress: number;
                gate: number;
                velocity: number;
                pressure: number;
                keyfollow: number;
                keyfollow2: number;
                alternate: number;
                random: number;
                stackvoice: number;
                adsr1: number;
                adsr2: number;
                lfo1: number;
                lfo2: number;
            };
        };
        tyrellTuneModDepth2: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        tyrellPwdepth: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        tyrellPwsrc: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                none: number;
                modwhl: number;
                pitchw: number;
                breath: number;
                xpress: number;
                gate: number;
                velocity: number;
                pressure: number;
                keyfollow: number;
                keyfollow2: number;
                alternate: number;
                random: number;
                stackvoice: number;
                adsr1: number;
                adsr2: number;
                lfo1: number;
                lfo2: number;
            };
        };
        tyrellDetune: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        tyrellSoftSync: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        tyrellVibrato: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        tyrellRingModIn1: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                osc1: number;
                osc2: number;
                subosc: number;
                "osc1+2": number;
                "osc1+sub": number;
                vcf: number;
            };
        };
        tyrellRingModIn2: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                osc1: number;
                osc2: number;
                subosc: number;
            };
        };
        tyrellNoiseColour: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        tyrellOscVolume1: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        tyrellOscVolume2: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        tyrellSubVolume: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        tyrellNoiseVolume: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        tyrellRingModulator: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        tyrellFeedback: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        tyrellVcfmode: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                "lp / hp": number;
                bp: number;
            };
        };
        tyrellVcfpoles: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                "12 db/oct": number;
                "24 db/oct": number;
                "36 db/oct": number;
            };
        };
        tyrellCutoff: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        tyrellFreqModSrc1: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                none: number;
                modwhl: number;
                pitchw: number;
                breath: number;
                xpress: number;
                gate: number;
                velocity: number;
                pressure: number;
                keyfollow: number;
                keyfollow2: number;
                alternate: number;
                random: number;
                stackvoice: number;
                adsr1: number;
                adsr2: number;
                lfo1: number;
                lfo2: number;
            };
        };
        tyrellFreqModDepth1: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        tyrellFreqModSrc2: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                none: number;
                modwhl: number;
                pitchw: number;
                breath: number;
                xpress: number;
                gate: number;
                velocity: number;
                pressure: number;
                keyfollow: number;
                keyfollow2: number;
                alternate: number;
                random: number;
                stackvoice: number;
                adsr1: number;
                adsr2: number;
                lfo1: number;
                lfo2: number;
            };
        };
        tyrellFreqModDepth2: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        tyrellKeyFollow: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        tyrellResonance: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        tyrellMixSpread: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        tyrellAudioRateSrc: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                osc1: number;
            };
        };
        tyrellAudioRateDest: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                "osc2 fm": number;
                "osc2 pwm": number;
                filterfm: number;
            };
        };
        tyrellXmoddepth: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        tyrellAudioRateModSrc: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                none: number;
                modwhl: number;
                pitchw: number;
                breath: number;
                xpress: number;
                gate: number;
                velocity: number;
                pressure: number;
                keyfollow: number;
                keyfollow2: number;
                alternate: number;
                random: number;
                stackvoice: number;
                adsr1: number;
                adsr2: number;
                lfo1: number;
                lfo2: number;
            };
        };
        chrs1Type: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                classic: number;
                dramatic: number;
                ensemble: number;
            };
        };
        chrs1Rate: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        chrs1Depth: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        chrs1Wet: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        lfo1Restart: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                sync: number;
                gate: number;
                single: number;
                random: number;
            };
        };
        lfo1Waveform: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                sine: number;
                triangle: number;
                "saw up": number;
                "saw down": number;
                "sqr hi-lo": number;
                "sqr lo-hi": number;
                "rand hold": number;
                "rand glide": number;
            };
        };
        lfo1Phase: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        lfo1Polarity: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                bipolar: number;
                positive: number;
            };
        };
        lfo1DepthModDpt1: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        lfo1Rate: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        lfo1FreqModDpt: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        lfo2Restart: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                sync: number;
                gate: number;
                single: number;
                random: number;
            };
        };
        lfo2Waveform: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                sine: number;
                triangle: number;
                "saw up": number;
                "saw down": number;
                "sqr hi-lo": number;
                "sqr lo-hi": number;
                "rand hold": number;
                "rand glide": number;
            };
        };
        lfo2Phase: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        lfo2Polarity: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                bipolar: number;
                positive: number;
            };
        };
        lfo2DepthModDpt1: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        lfo2Rate: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        lfo2FreqModDpt: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
    };
    static readonly makeAutomation: {
        mainOutput(value?: number | undefined, curve?: number): PluginAutomation;
        pcoreMatrix1Source(value?: number | undefined, curve?: number): PluginAutomation;
        pcoreMatrix1Depth(value?: number | undefined, curve?: number): PluginAutomation;
        pcoreMatrix1ViaSrc(value?: number | undefined, curve?: number): PluginAutomation;
        pcoreMatrix1Via(value?: number | undefined, curve?: number): PluginAutomation;
        pcoreMatrix2Source(value?: number | undefined, curve?: number): PluginAutomation;
        pcoreMatrix2Depth(value?: number | undefined, curve?: number): PluginAutomation;
        pcoreMatrix2ViaSrc(value?: number | undefined, curve?: number): PluginAutomation;
        pcoreMatrix2Via(value?: number | undefined, curve?: number): PluginAutomation;
        vccVoiceStack(value?: number | undefined, curve?: number): PluginAutomation;
        vccMode(value?: number | undefined, curve?: number): PluginAutomation;
        vccGlideMode(value?: number | undefined, curve?: number): PluginAutomation;
        vccGlide(value?: number | undefined, curve?: number): PluginAutomation;
        vccGlide2(value?: number | undefined, curve?: number): PluginAutomation;
        vccPortaRange(value?: number | undefined, curve?: number): PluginAutomation;
        vccPitchBendUp(value?: number | undefined, curve?: number): PluginAutomation;
        vccPitchBendDown(value?: number | undefined, curve?: number): PluginAutomation;
        vccTranspose(value?: number | undefined, curve?: number): PluginAutomation;
        env1Attack(value?: number | undefined, curve?: number): PluginAutomation;
        env1Decay(value?: number | undefined, curve?: number): PluginAutomation;
        env1Sustain(value?: number | undefined, curve?: number): PluginAutomation;
        env1FallRise(value?: number | undefined, curve?: number): PluginAutomation;
        env1Release(value?: number | undefined, curve?: number): PluginAutomation;
        env1Velocity(value?: number | undefined, curve?: number): PluginAutomation;
        env1KeyTrack(value?: number | undefined, curve?: number): PluginAutomation;
        env1Trigger(value?: number | undefined, curve?: number): PluginAutomation;
        env2Attack(value?: number | undefined, curve?: number): PluginAutomation;
        env2Decay(value?: number | undefined, curve?: number): PluginAutomation;
        env2Sustain(value?: number | undefined, curve?: number): PluginAutomation;
        env2FallRise(value?: number | undefined, curve?: number): PluginAutomation;
        env2Release(value?: number | undefined, curve?: number): PluginAutomation;
        env2Velocity(value?: number | undefined, curve?: number): PluginAutomation;
        env2KeyTrack(value?: number | undefined, curve?: number): PluginAutomation;
        env2Trigger(value?: number | undefined, curve?: number): PluginAutomation;
        lfo1Sync(value?: number | undefined, curve?: number): PluginAutomation;
        lfo1Delay(value?: number | undefined, curve?: number): PluginAutomation;
        lfo2Sync(value?: number | undefined, curve?: number): PluginAutomation;
        lfo2Delay(value?: number | undefined, curve?: number): PluginAutomation;
        tyrellShape1(value?: number | undefined, curve?: number): PluginAutomation;
        tyrellTuneModSrc1(value?: number | undefined, curve?: number): PluginAutomation;
        tyrellTuneModDepth1(value?: number | undefined, curve?: number): PluginAutomation;
        tyrellShape2(value?: number | undefined, curve?: number): PluginAutomation;
        tyrellTune2(value?: number | undefined, curve?: number): PluginAutomation;
        tyrellFineTune2(value?: number | undefined, curve?: number): PluginAutomation;
        tyrellTuneModSrc2(value?: number | undefined, curve?: number): PluginAutomation;
        tyrellTuneModDepth2(value?: number | undefined, curve?: number): PluginAutomation;
        tyrellPwdepth(value?: number | undefined, curve?: number): PluginAutomation;
        tyrellPwsrc(value?: number | undefined, curve?: number): PluginAutomation;
        tyrellDetune(value?: number | undefined, curve?: number): PluginAutomation;
        tyrellSoftSync(value?: number | undefined, curve?: number): PluginAutomation;
        tyrellVibrato(value?: number | undefined, curve?: number): PluginAutomation;
        tyrellRingModIn1(value?: number | undefined, curve?: number): PluginAutomation;
        tyrellRingModIn2(value?: number | undefined, curve?: number): PluginAutomation;
        tyrellNoiseColour(value?: number | undefined, curve?: number): PluginAutomation;
        tyrellOscVolume1(value?: number | undefined, curve?: number): PluginAutomation;
        tyrellOscVolume2(value?: number | undefined, curve?: number): PluginAutomation;
        tyrellSubVolume(value?: number | undefined, curve?: number): PluginAutomation;
        tyrellNoiseVolume(value?: number | undefined, curve?: number): PluginAutomation;
        tyrellRingModulator(value?: number | undefined, curve?: number): PluginAutomation;
        tyrellFeedback(value?: number | undefined, curve?: number): PluginAutomation;
        tyrellVcfmode(value?: number | undefined, curve?: number): PluginAutomation;
        tyrellVcfpoles(value?: number | undefined, curve?: number): PluginAutomation;
        tyrellCutoff(value?: number | undefined, curve?: number): PluginAutomation;
        tyrellFreqModSrc1(value?: number | undefined, curve?: number): PluginAutomation;
        tyrellFreqModDepth1(value?: number | undefined, curve?: number): PluginAutomation;
        tyrellFreqModSrc2(value?: number | undefined, curve?: number): PluginAutomation;
        tyrellFreqModDepth2(value?: number | undefined, curve?: number): PluginAutomation;
        tyrellKeyFollow(value?: number | undefined, curve?: number): PluginAutomation;
        tyrellResonance(value?: number | undefined, curve?: number): PluginAutomation;
        tyrellMixSpread(value?: number | undefined, curve?: number): PluginAutomation;
        tyrellAudioRateSrc(value?: number | undefined, curve?: number): PluginAutomation;
        tyrellAudioRateDest(value?: number | undefined, curve?: number): PluginAutomation;
        tyrellXmoddepth(value?: number | undefined, curve?: number): PluginAutomation;
        tyrellAudioRateModSrc(value?: number | undefined, curve?: number): PluginAutomation;
        chrs1Type(value?: number | undefined, curve?: number): PluginAutomation;
        chrs1Rate(value?: number | undefined, curve?: number): PluginAutomation;
        chrs1Depth(value?: number | undefined, curve?: number): PluginAutomation;
        chrs1Wet(value?: number | undefined, curve?: number): PluginAutomation;
        lfo1Restart(value?: number | undefined, curve?: number): PluginAutomation;
        lfo1Waveform(value?: number | undefined, curve?: number): PluginAutomation;
        lfo1Phase(value?: number | undefined, curve?: number): PluginAutomation;
        lfo1Polarity(value?: number | undefined, curve?: number): PluginAutomation;
        lfo1DepthModDpt1(value?: number | undefined, curve?: number): PluginAutomation;
        lfo1Rate(value?: number | undefined, curve?: number): PluginAutomation;
        lfo1FreqModDpt(value?: number | undefined, curve?: number): PluginAutomation;
        lfo2Restart(value?: number | undefined, curve?: number): PluginAutomation;
        lfo2Waveform(value?: number | undefined, curve?: number): PluginAutomation;
        lfo2Phase(value?: number | undefined, curve?: number): PluginAutomation;
        lfo2Polarity(value?: number | undefined, curve?: number): PluginAutomation;
        lfo2DepthModDpt1(value?: number | undefined, curve?: number): PluginAutomation;
        lfo2Rate(value?: number | undefined, curve?: number): PluginAutomation;
        lfo2FreqModDpt(value?: number | undefined, curve?: number): PluginAutomation;
    };
}
