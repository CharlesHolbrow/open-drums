import { FluidPlugin } from '../FluidPlugin';
import { PluginAutomation } from '../techniques';
export interface PodolskiVst2Parameters {
    /** value from 0 to 200 */
    mainOutput?: number;
    mainActiveLfog?: number;
    mainActiveChrs?: number;
    mainActiveDly1?: number;
    /** value from 0.1 to 8 */
    lfogSync?: number;
    /** percent value from 0 to 100 */
    lfogPhasePercent?: number;
    vccActiveLfo1?: number;
    vccVoices?: number;
    vccVoiceStack?: number;
    vccMode?: number;
    /** percent value from 0 to 100 */
    vccGlidePercent?: number;
    /** percent value from -100 to 100 */
    vccArpStepMod1Percent?: number;
    /** percent value from -100 to 100 */
    vccArpStepMod2Percent?: number;
    /** percent value from -100 to 100 */
    vccArpStepMod3Percent?: number;
    /** percent value from -100 to 100 */
    vccArpStepMod4Percent?: number;
    /** percent value from -100 to 100 */
    vccArpStepMod5Percent?: number;
    /** percent value from -100 to 100 */
    vccArpStepMod6Percent?: number;
    /** percent value from -100 to 100 */
    vccArpStepMod7Percent?: number;
    /** percent value from -100 to 100 */
    vccArpStepMod8Percent?: number;
    /** percent value from -100 to 100 */
    vccArpStepMod9Percent?: number;
    /** percent value from -100 to 100 */
    vccArpStepMod10Percent?: number;
    /** percent value from -100 to 100 */
    vccArpStepMod11Percent?: number;
    /** percent value from -100 to 100 */
    vccArpStepMod12Percent?: number;
    /** percent value from -100 to 100 */
    vccArpStepMod13Percent?: number;
    /** percent value from -100 to 100 */
    vccArpStepMod14Percent?: number;
    /** percent value from -100 to 100 */
    vccArpStepMod15Percent?: number;
    /** percent value from -100 to 100 */
    vccArpStepMod16Percent?: number;
    /** percent value from 0 to 100 */
    env1AttackPercent?: number;
    /** percent value from 0 to 100 */
    env1DecayPercent?: number;
    /** percent value from 0 to 100 */
    env1SustainPercent?: number;
    /** percent value from -100 to 100 */
    env1FallRisePercent?: number;
    /** percent value from 0 to 100 */
    env1ReleasePercent?: number;
    /** percent value from 0 to 100 */
    env1VelocityPercent?: number;
    /** value from 0.1 to 8 */
    lfo1Sync?: number;
    /** percent value from 0 to 100 */
    lfo1DelayPercent?: number;
    /** value from -24 to 24 */
    osc1Tune?: number;
    osc1TuneModSrc?: number;
    /** value from -24 to 24 */
    osc1TuneModDepth?: number;
    /** percent value from 0 to 100 */
    osc1PhasePercent?: number;
    osc1PhaseModSrc?: number;
    /** value from -50 to 50 */
    osc1PhaseModDepth?: number;
    /** percent value from -100 to 100 */
    osc1InverseVolumePercent?: number;
    /** percent value from 0 to 100 */
    osc1WaveWarpPercent?: number;
    osc1WarpModSrc?: number;
    /** percent value from -100 to 100 */
    osc1WarpModDepthPercent?: number;
    /** percent value from 0 to 100 */
    osc1VibratoPercent?: number;
    vcf0Type?: number;
    /** value from 0 to 150 */
    vcf0Cutoff?: number;
    /** percent value from 0 to 100 */
    vcf0ResonancePercent?: number;
    /** percent value from 0 to 100 */
    vcf0DrivePercent?: number;
    /** value from -150 to 150 */
    vcf0CutoffMod1?: number;
    vcf0Modsource1?: number;
    /** value from -150 to 150 */
    vcf0CutoffMod2?: number;
    vcf0Modsource2?: number;
    /** percent value from -100 to 100 */
    vcf0KeyFollowPercent?: number;
    /** percent value from -100 to 100 */
    vcf0AutoFMPercent?: number;
    /** percent value from 0 to 100 */
    vcf0ClickPercent?: number;
    /** percent value from -100 to 100 */
    vca1PanPercent?: number;
    /** percent value from 0 to 100 */
    vca1VolumePercent?: number;
    /** percent value from -100 to 100 */
    vca1ModDepthPercent?: number;
    /** percent value from 0 to 100 */
    chrsCenterPercent?: number;
    /** percent value from 0 to 100 */
    chrsSpeedPercent?: number;
    /** percent value from 0 to 100 */
    chrsDepthPercent?: number;
    /** percent value from -100 to 100 */
    chrsFeedbackPercent?: number;
    /** percent value from 0 to 100 */
    chrsMixPercent?: number;
    dly1SyncLeft?: number;
    dly1SyncRight?: number;
    /** percent value from 0 to 100 */
    dly1FeedbackPercent?: number;
    /** percent value from 0 to 100 */
    dly1CrossfeedPercent?: number;
    /** percent value from 0 to 100 */
    dly1MixPercent?: number;
    lfogWaveform?: number;
    lfogPolarity?: number;
    lfo1Restart?: number;
    lfo1Waveform?: number;
    /** percent value from 0 to 100 */
    lfo1PhasePercent?: number;
    lfo1Polarity?: number;
    /** percent value from 0 to 100 */
    lfo1DepthModDpt1Percent?: number;
    /** value from -5 to 5 */
    lfo1Rate?: number;
    /** value from -5 to 5 */
    lfo1FreqModDpt?: number;
}
export declare class PodolskiVst2 extends FluidPlugin {
    readonly parameters: PodolskiVst2Parameters;
    constructor(parameters?: PodolskiVst2Parameters);
    readonly parameterLibrary: {
        mainOutput: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        mainActiveLfog: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                off: number;
                on: number;
            };
        };
        mainActiveChrs: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                off: number;
                on: number;
            };
        };
        mainActiveDly1: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                off: number;
                on: number;
            };
        };
        lfogSync: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        lfogPhasePercent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        vccActiveLfo1: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                off: number;
                on: number;
            };
        };
        vccVoices: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                few: number;
                medium: number;
                many: number;
            };
        };
        vccVoiceStack: {
            name: string;
            index: number;
            isLinear: boolean;
            units: string;
            choices: {
                "1.00": number;
            };
        };
        vccMode: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                poly: number;
                mono: number;
                legato: number;
                arpeggiator: number;
            };
        };
        vccGlidePercent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        vccArpStepMod1Percent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        vccArpStepMod2Percent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        vccArpStepMod3Percent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        vccArpStepMod4Percent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        vccArpStepMod5Percent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        vccArpStepMod6Percent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        vccArpStepMod7Percent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        vccArpStepMod8Percent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        vccArpStepMod9Percent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        vccArpStepMod10Percent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        vccArpStepMod11Percent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        vccArpStepMod12Percent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        vccArpStepMod13Percent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        vccArpStepMod14Percent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        vccArpStepMod15Percent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        vccArpStepMod16Percent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        env1AttackPercent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        env1DecayPercent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        env1SustainPercent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        env1FallRisePercent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        env1ReleasePercent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        env1VelocityPercent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        lfo1Sync: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        lfo1DelayPercent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        osc1Tune: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        osc1TuneModSrc: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                none: number;
                modwheel: number;
                pitchwheel: number;
                "control a": number;
                "control b": number;
                lfoglobal: number;
                gate: number;
                velocity: number;
                pressure: number;
                keyfollow: number;
                keyfollow2: number;
                alternate: number;
                random: number;
                constant: number;
                arpmodulator: number;
                envelope1: number;
                lfo1: number;
            };
        };
        osc1TuneModDepth: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        osc1PhasePercent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        osc1PhaseModSrc: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                none: number;
                modwheel: number;
                pitchwheel: number;
                "control a": number;
                "control b": number;
                lfoglobal: number;
                gate: number;
                velocity: number;
                pressure: number;
                keyfollow: number;
                keyfollow2: number;
                alternate: number;
                random: number;
                constant: number;
                arpmodulator: number;
                envelope1: number;
                lfo1: number;
            };
        };
        osc1PhaseModDepth: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        osc1InverseVolumePercent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        osc1WaveWarpPercent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        osc1WarpModSrc: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                none: number;
                modwheel: number;
                pitchwheel: number;
                "control a": number;
                "control b": number;
                lfoglobal: number;
                gate: number;
                velocity: number;
                pressure: number;
                keyfollow: number;
                keyfollow2: number;
                alternate: number;
                random: number;
                constant: number;
                arpmodulator: number;
                envelope1: number;
                lfo1: number;
            };
        };
        osc1WarpModDepthPercent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        osc1VibratoPercent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        vcf0Type: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                lowpass: number;
                bandpass: number;
                highpass: number;
            };
        };
        vcf0Cutoff: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        vcf0ResonancePercent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        vcf0DrivePercent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        vcf0CutoffMod1: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        vcf0Modsource1: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                none: number;
                modwheel: number;
                pitchwheel: number;
                "control a": number;
                "control b": number;
                lfoglobal: number;
                gate: number;
                velocity: number;
                pressure: number;
                keyfollow: number;
                keyfollow2: number;
                alternate: number;
                random: number;
                constant: number;
                arpmodulator: number;
                envelope1: number;
                lfo1: number;
            };
        };
        vcf0CutoffMod2: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        vcf0Modsource2: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                none: number;
                modwheel: number;
                pitchwheel: number;
                "control a": number;
                "control b": number;
                lfoglobal: number;
                gate: number;
                velocity: number;
                pressure: number;
                keyfollow: number;
                keyfollow2: number;
                alternate: number;
                random: number;
                constant: number;
                arpmodulator: number;
                envelope1: number;
                lfo1: number;
            };
        };
        vcf0KeyFollowPercent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        vcf0AutoFMPercent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        vcf0ClickPercent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        vca1PanPercent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        vca1VolumePercent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        vca1ModDepthPercent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        chrsCenterPercent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        chrsSpeedPercent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        chrsDepthPercent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        chrsFeedbackPercent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        chrsMixPercent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        dly1SyncLeft: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                "1/64": number;
                "1/32": number;
                "1/16": number;
                "1/8": number;
                "1/4": number;
                "1/2": number;
                "1/1": number;
                "1/32 dot": number;
                "1/16 dot": number;
                "1/8 dot": number;
                "1/4 dot": number;
                "1/2 dot": number;
                "1/16 trip": number;
                "1/8 trip": number;
                "1/4 trip": number;
                "1/2 trip": number;
                "1/1 trip": number;
            };
        };
        dly1SyncRight: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                "1/64": number;
                "1/32": number;
                "1/16": number;
                "1/8": number;
                "1/4": number;
                "1/2": number;
                "1/1": number;
                "1/32 dot": number;
                "1/16 dot": number;
                "1/8 dot": number;
                "1/4 dot": number;
                "1/2 dot": number;
                "1/16 trip": number;
                "1/8 trip": number;
                "1/4 trip": number;
                "1/2 trip": number;
                "1/1 trip": number;
            };
        };
        dly1FeedbackPercent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        dly1CrossfeedPercent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        dly1MixPercent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        lfogWaveform: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                sine: number;
                triangle: number;
                "saw up": number;
                "saw down": number;
                "sqr hi-lo": number;
                "sqr lo-hi": number;
                "rand hold": number;
                "rand glide": number;
            };
        };
        lfogPolarity: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                bipolar: number;
                positive: number;
            };
        };
        lfo1Restart: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                sync: number;
                gate: number;
                single: number;
                random: number;
            };
        };
        lfo1Waveform: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                sine: number;
                triangle: number;
                "saw up": number;
                "saw down": number;
                "sqr hi-lo": number;
                "sqr lo-hi": number;
                "rand hold": number;
                "rand glide": number;
            };
        };
        lfo1PhasePercent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        lfo1Polarity: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                bipolar: number;
                positive: number;
            };
        };
        lfo1DepthModDpt1Percent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        lfo1Rate: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        lfo1FreqModDpt: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
    };
    readonly makeAutomation: {
        mainOutput(value?: number | undefined, curve?: number): PluginAutomation;
        mainActiveLfog(value?: number | undefined, curve?: number): PluginAutomation;
        mainActiveChrs(value?: number | undefined, curve?: number): PluginAutomation;
        mainActiveDly1(value?: number | undefined, curve?: number): PluginAutomation;
        lfogSync(value?: number | undefined, curve?: number): PluginAutomation;
        lfogPhasePercent(value?: number | undefined, curve?: number): PluginAutomation;
        vccActiveLfo1(value?: number | undefined, curve?: number): PluginAutomation;
        vccVoices(value?: number | undefined, curve?: number): PluginAutomation;
        vccVoiceStack(value?: number | undefined, curve?: number): PluginAutomation;
        vccMode(value?: number | undefined, curve?: number): PluginAutomation;
        vccGlidePercent(value?: number | undefined, curve?: number): PluginAutomation;
        vccArpStepMod1Percent(value?: number | undefined, curve?: number): PluginAutomation;
        vccArpStepMod2Percent(value?: number | undefined, curve?: number): PluginAutomation;
        vccArpStepMod3Percent(value?: number | undefined, curve?: number): PluginAutomation;
        vccArpStepMod4Percent(value?: number | undefined, curve?: number): PluginAutomation;
        vccArpStepMod5Percent(value?: number | undefined, curve?: number): PluginAutomation;
        vccArpStepMod6Percent(value?: number | undefined, curve?: number): PluginAutomation;
        vccArpStepMod7Percent(value?: number | undefined, curve?: number): PluginAutomation;
        vccArpStepMod8Percent(value?: number | undefined, curve?: number): PluginAutomation;
        vccArpStepMod9Percent(value?: number | undefined, curve?: number): PluginAutomation;
        vccArpStepMod10Percent(value?: number | undefined, curve?: number): PluginAutomation;
        vccArpStepMod11Percent(value?: number | undefined, curve?: number): PluginAutomation;
        vccArpStepMod12Percent(value?: number | undefined, curve?: number): PluginAutomation;
        vccArpStepMod13Percent(value?: number | undefined, curve?: number): PluginAutomation;
        vccArpStepMod14Percent(value?: number | undefined, curve?: number): PluginAutomation;
        vccArpStepMod15Percent(value?: number | undefined, curve?: number): PluginAutomation;
        vccArpStepMod16Percent(value?: number | undefined, curve?: number): PluginAutomation;
        env1AttackPercent(value?: number | undefined, curve?: number): PluginAutomation;
        env1DecayPercent(value?: number | undefined, curve?: number): PluginAutomation;
        env1SustainPercent(value?: number | undefined, curve?: number): PluginAutomation;
        env1FallRisePercent(value?: number | undefined, curve?: number): PluginAutomation;
        env1ReleasePercent(value?: number | undefined, curve?: number): PluginAutomation;
        env1VelocityPercent(value?: number | undefined, curve?: number): PluginAutomation;
        lfo1Sync(value?: number | undefined, curve?: number): PluginAutomation;
        lfo1DelayPercent(value?: number | undefined, curve?: number): PluginAutomation;
        osc1Tune(value?: number | undefined, curve?: number): PluginAutomation;
        osc1TuneModSrc(value?: number | undefined, curve?: number): PluginAutomation;
        osc1TuneModDepth(value?: number | undefined, curve?: number): PluginAutomation;
        osc1PhasePercent(value?: number | undefined, curve?: number): PluginAutomation;
        osc1PhaseModSrc(value?: number | undefined, curve?: number): PluginAutomation;
        osc1PhaseModDepth(value?: number | undefined, curve?: number): PluginAutomation;
        osc1InverseVolumePercent(value?: number | undefined, curve?: number): PluginAutomation;
        osc1WaveWarpPercent(value?: number | undefined, curve?: number): PluginAutomation;
        osc1WarpModSrc(value?: number | undefined, curve?: number): PluginAutomation;
        osc1WarpModDepthPercent(value?: number | undefined, curve?: number): PluginAutomation;
        osc1VibratoPercent(value?: number | undefined, curve?: number): PluginAutomation;
        vcf0Type(value?: number | undefined, curve?: number): PluginAutomation;
        vcf0Cutoff(value?: number | undefined, curve?: number): PluginAutomation;
        vcf0ResonancePercent(value?: number | undefined, curve?: number): PluginAutomation;
        vcf0DrivePercent(value?: number | undefined, curve?: number): PluginAutomation;
        vcf0CutoffMod1(value?: number | undefined, curve?: number): PluginAutomation;
        vcf0Modsource1(value?: number | undefined, curve?: number): PluginAutomation;
        vcf0CutoffMod2(value?: number | undefined, curve?: number): PluginAutomation;
        vcf0Modsource2(value?: number | undefined, curve?: number): PluginAutomation;
        vcf0KeyFollowPercent(value?: number | undefined, curve?: number): PluginAutomation;
        vcf0AutoFMPercent(value?: number | undefined, curve?: number): PluginAutomation;
        vcf0ClickPercent(value?: number | undefined, curve?: number): PluginAutomation;
        vca1PanPercent(value?: number | undefined, curve?: number): PluginAutomation;
        vca1VolumePercent(value?: number | undefined, curve?: number): PluginAutomation;
        vca1ModDepthPercent(value?: number | undefined, curve?: number): PluginAutomation;
        chrsCenterPercent(value?: number | undefined, curve?: number): PluginAutomation;
        chrsSpeedPercent(value?: number | undefined, curve?: number): PluginAutomation;
        chrsDepthPercent(value?: number | undefined, curve?: number): PluginAutomation;
        chrsFeedbackPercent(value?: number | undefined, curve?: number): PluginAutomation;
        chrsMixPercent(value?: number | undefined, curve?: number): PluginAutomation;
        dly1SyncLeft(value?: number | undefined, curve?: number): PluginAutomation;
        dly1SyncRight(value?: number | undefined, curve?: number): PluginAutomation;
        dly1FeedbackPercent(value?: number | undefined, curve?: number): PluginAutomation;
        dly1CrossfeedPercent(value?: number | undefined, curve?: number): PluginAutomation;
        dly1MixPercent(value?: number | undefined, curve?: number): PluginAutomation;
        lfogWaveform(value?: number | undefined, curve?: number): PluginAutomation;
        lfogPolarity(value?: number | undefined, curve?: number): PluginAutomation;
        lfo1Restart(value?: number | undefined, curve?: number): PluginAutomation;
        lfo1Waveform(value?: number | undefined, curve?: number): PluginAutomation;
        lfo1PhasePercent(value?: number | undefined, curve?: number): PluginAutomation;
        lfo1Polarity(value?: number | undefined, curve?: number): PluginAutomation;
        lfo1DepthModDpt1Percent(value?: number | undefined, curve?: number): PluginAutomation;
        lfo1Rate(value?: number | undefined, curve?: number): PluginAutomation;
        lfo1FreqModDpt(value?: number | undefined, curve?: number): PluginAutomation;
    };
    static readonly parameterLibrary: {
        mainOutput: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        mainActiveLfog: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                off: number;
                on: number;
            };
        };
        mainActiveChrs: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                off: number;
                on: number;
            };
        };
        mainActiveDly1: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                off: number;
                on: number;
            };
        };
        lfogSync: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        lfogPhasePercent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        vccActiveLfo1: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                off: number;
                on: number;
            };
        };
        vccVoices: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                few: number;
                medium: number;
                many: number;
            };
        };
        vccVoiceStack: {
            name: string;
            index: number;
            isLinear: boolean;
            units: string;
            choices: {
                "1.00": number;
            };
        };
        vccMode: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                poly: number;
                mono: number;
                legato: number;
                arpeggiator: number;
            };
        };
        vccGlidePercent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        vccArpStepMod1Percent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        vccArpStepMod2Percent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        vccArpStepMod3Percent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        vccArpStepMod4Percent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        vccArpStepMod5Percent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        vccArpStepMod6Percent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        vccArpStepMod7Percent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        vccArpStepMod8Percent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        vccArpStepMod9Percent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        vccArpStepMod10Percent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        vccArpStepMod11Percent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        vccArpStepMod12Percent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        vccArpStepMod13Percent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        vccArpStepMod14Percent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        vccArpStepMod15Percent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        vccArpStepMod16Percent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        env1AttackPercent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        env1DecayPercent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        env1SustainPercent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        env1FallRisePercent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        env1ReleasePercent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        env1VelocityPercent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        lfo1Sync: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        lfo1DelayPercent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        osc1Tune: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        osc1TuneModSrc: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                none: number;
                modwheel: number;
                pitchwheel: number;
                "control a": number;
                "control b": number;
                lfoglobal: number;
                gate: number;
                velocity: number;
                pressure: number;
                keyfollow: number;
                keyfollow2: number;
                alternate: number;
                random: number;
                constant: number;
                arpmodulator: number;
                envelope1: number;
                lfo1: number;
            };
        };
        osc1TuneModDepth: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        osc1PhasePercent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        osc1PhaseModSrc: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                none: number;
                modwheel: number;
                pitchwheel: number;
                "control a": number;
                "control b": number;
                lfoglobal: number;
                gate: number;
                velocity: number;
                pressure: number;
                keyfollow: number;
                keyfollow2: number;
                alternate: number;
                random: number;
                constant: number;
                arpmodulator: number;
                envelope1: number;
                lfo1: number;
            };
        };
        osc1PhaseModDepth: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        osc1InverseVolumePercent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        osc1WaveWarpPercent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        osc1WarpModSrc: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                none: number;
                modwheel: number;
                pitchwheel: number;
                "control a": number;
                "control b": number;
                lfoglobal: number;
                gate: number;
                velocity: number;
                pressure: number;
                keyfollow: number;
                keyfollow2: number;
                alternate: number;
                random: number;
                constant: number;
                arpmodulator: number;
                envelope1: number;
                lfo1: number;
            };
        };
        osc1WarpModDepthPercent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        osc1VibratoPercent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        vcf0Type: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                lowpass: number;
                bandpass: number;
                highpass: number;
            };
        };
        vcf0Cutoff: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        vcf0ResonancePercent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        vcf0DrivePercent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        vcf0CutoffMod1: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        vcf0Modsource1: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                none: number;
                modwheel: number;
                pitchwheel: number;
                "control a": number;
                "control b": number;
                lfoglobal: number;
                gate: number;
                velocity: number;
                pressure: number;
                keyfollow: number;
                keyfollow2: number;
                alternate: number;
                random: number;
                constant: number;
                arpmodulator: number;
                envelope1: number;
                lfo1: number;
            };
        };
        vcf0CutoffMod2: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        vcf0Modsource2: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                none: number;
                modwheel: number;
                pitchwheel: number;
                "control a": number;
                "control b": number;
                lfoglobal: number;
                gate: number;
                velocity: number;
                pressure: number;
                keyfollow: number;
                keyfollow2: number;
                alternate: number;
                random: number;
                constant: number;
                arpmodulator: number;
                envelope1: number;
                lfo1: number;
            };
        };
        vcf0KeyFollowPercent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        vcf0AutoFMPercent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        vcf0ClickPercent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        vca1PanPercent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        vca1VolumePercent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        vca1ModDepthPercent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        chrsCenterPercent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        chrsSpeedPercent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        chrsDepthPercent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        chrsFeedbackPercent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        chrsMixPercent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        dly1SyncLeft: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                "1/64": number;
                "1/32": number;
                "1/16": number;
                "1/8": number;
                "1/4": number;
                "1/2": number;
                "1/1": number;
                "1/32 dot": number;
                "1/16 dot": number;
                "1/8 dot": number;
                "1/4 dot": number;
                "1/2 dot": number;
                "1/16 trip": number;
                "1/8 trip": number;
                "1/4 trip": number;
                "1/2 trip": number;
                "1/1 trip": number;
            };
        };
        dly1SyncRight: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                "1/64": number;
                "1/32": number;
                "1/16": number;
                "1/8": number;
                "1/4": number;
                "1/2": number;
                "1/1": number;
                "1/32 dot": number;
                "1/16 dot": number;
                "1/8 dot": number;
                "1/4 dot": number;
                "1/2 dot": number;
                "1/16 trip": number;
                "1/8 trip": number;
                "1/4 trip": number;
                "1/2 trip": number;
                "1/1 trip": number;
            };
        };
        dly1FeedbackPercent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        dly1CrossfeedPercent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        dly1MixPercent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        lfogWaveform: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                sine: number;
                triangle: number;
                "saw up": number;
                "saw down": number;
                "sqr hi-lo": number;
                "sqr lo-hi": number;
                "rand hold": number;
                "rand glide": number;
            };
        };
        lfogPolarity: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                bipolar: number;
                positive: number;
            };
        };
        lfo1Restart: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                sync: number;
                gate: number;
                single: number;
                random: number;
            };
        };
        lfo1Waveform: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                sine: number;
                triangle: number;
                "saw up": number;
                "saw down": number;
                "sqr hi-lo": number;
                "sqr lo-hi": number;
                "rand hold": number;
                "rand glide": number;
            };
        };
        lfo1PhasePercent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        lfo1Polarity: {
            name: string;
            index: number;
            isLinear: boolean;
            choices: {
                bipolar: number;
                positive: number;
            };
        };
        lfo1DepthModDpt1Percent: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
            units: string;
        };
        lfo1Rate: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
        lfo1FreqModDpt: {
            name: string;
            index: number;
            isLinear: boolean;
            range: [number, number];
        };
    };
    static readonly makeAutomation: {
        mainOutput(value?: number | undefined, curve?: number): PluginAutomation;
        mainActiveLfog(value?: number | undefined, curve?: number): PluginAutomation;
        mainActiveChrs(value?: number | undefined, curve?: number): PluginAutomation;
        mainActiveDly1(value?: number | undefined, curve?: number): PluginAutomation;
        lfogSync(value?: number | undefined, curve?: number): PluginAutomation;
        lfogPhasePercent(value?: number | undefined, curve?: number): PluginAutomation;
        vccActiveLfo1(value?: number | undefined, curve?: number): PluginAutomation;
        vccVoices(value?: number | undefined, curve?: number): PluginAutomation;
        vccVoiceStack(value?: number | undefined, curve?: number): PluginAutomation;
        vccMode(value?: number | undefined, curve?: number): PluginAutomation;
        vccGlidePercent(value?: number | undefined, curve?: number): PluginAutomation;
        vccArpStepMod1Percent(value?: number | undefined, curve?: number): PluginAutomation;
        vccArpStepMod2Percent(value?: number | undefined, curve?: number): PluginAutomation;
        vccArpStepMod3Percent(value?: number | undefined, curve?: number): PluginAutomation;
        vccArpStepMod4Percent(value?: number | undefined, curve?: number): PluginAutomation;
        vccArpStepMod5Percent(value?: number | undefined, curve?: number): PluginAutomation;
        vccArpStepMod6Percent(value?: number | undefined, curve?: number): PluginAutomation;
        vccArpStepMod7Percent(value?: number | undefined, curve?: number): PluginAutomation;
        vccArpStepMod8Percent(value?: number | undefined, curve?: number): PluginAutomation;
        vccArpStepMod9Percent(value?: number | undefined, curve?: number): PluginAutomation;
        vccArpStepMod10Percent(value?: number | undefined, curve?: number): PluginAutomation;
        vccArpStepMod11Percent(value?: number | undefined, curve?: number): PluginAutomation;
        vccArpStepMod12Percent(value?: number | undefined, curve?: number): PluginAutomation;
        vccArpStepMod13Percent(value?: number | undefined, curve?: number): PluginAutomation;
        vccArpStepMod14Percent(value?: number | undefined, curve?: number): PluginAutomation;
        vccArpStepMod15Percent(value?: number | undefined, curve?: number): PluginAutomation;
        vccArpStepMod16Percent(value?: number | undefined, curve?: number): PluginAutomation;
        env1AttackPercent(value?: number | undefined, curve?: number): PluginAutomation;
        env1DecayPercent(value?: number | undefined, curve?: number): PluginAutomation;
        env1SustainPercent(value?: number | undefined, curve?: number): PluginAutomation;
        env1FallRisePercent(value?: number | undefined, curve?: number): PluginAutomation;
        env1ReleasePercent(value?: number | undefined, curve?: number): PluginAutomation;
        env1VelocityPercent(value?: number | undefined, curve?: number): PluginAutomation;
        lfo1Sync(value?: number | undefined, curve?: number): PluginAutomation;
        lfo1DelayPercent(value?: number | undefined, curve?: number): PluginAutomation;
        osc1Tune(value?: number | undefined, curve?: number): PluginAutomation;
        osc1TuneModSrc(value?: number | undefined, curve?: number): PluginAutomation;
        osc1TuneModDepth(value?: number | undefined, curve?: number): PluginAutomation;
        osc1PhasePercent(value?: number | undefined, curve?: number): PluginAutomation;
        osc1PhaseModSrc(value?: number | undefined, curve?: number): PluginAutomation;
        osc1PhaseModDepth(value?: number | undefined, curve?: number): PluginAutomation;
        osc1InverseVolumePercent(value?: number | undefined, curve?: number): PluginAutomation;
        osc1WaveWarpPercent(value?: number | undefined, curve?: number): PluginAutomation;
        osc1WarpModSrc(value?: number | undefined, curve?: number): PluginAutomation;
        osc1WarpModDepthPercent(value?: number | undefined, curve?: number): PluginAutomation;
        osc1VibratoPercent(value?: number | undefined, curve?: number): PluginAutomation;
        vcf0Type(value?: number | undefined, curve?: number): PluginAutomation;
        vcf0Cutoff(value?: number | undefined, curve?: number): PluginAutomation;
        vcf0ResonancePercent(value?: number | undefined, curve?: number): PluginAutomation;
        vcf0DrivePercent(value?: number | undefined, curve?: number): PluginAutomation;
        vcf0CutoffMod1(value?: number | undefined, curve?: number): PluginAutomation;
        vcf0Modsource1(value?: number | undefined, curve?: number): PluginAutomation;
        vcf0CutoffMod2(value?: number | undefined, curve?: number): PluginAutomation;
        vcf0Modsource2(value?: number | undefined, curve?: number): PluginAutomation;
        vcf0KeyFollowPercent(value?: number | undefined, curve?: number): PluginAutomation;
        vcf0AutoFMPercent(value?: number | undefined, curve?: number): PluginAutomation;
        vcf0ClickPercent(value?: number | undefined, curve?: number): PluginAutomation;
        vca1PanPercent(value?: number | undefined, curve?: number): PluginAutomation;
        vca1VolumePercent(value?: number | undefined, curve?: number): PluginAutomation;
        vca1ModDepthPercent(value?: number | undefined, curve?: number): PluginAutomation;
        chrsCenterPercent(value?: number | undefined, curve?: number): PluginAutomation;
        chrsSpeedPercent(value?: number | undefined, curve?: number): PluginAutomation;
        chrsDepthPercent(value?: number | undefined, curve?: number): PluginAutomation;
        chrsFeedbackPercent(value?: number | undefined, curve?: number): PluginAutomation;
        chrsMixPercent(value?: number | undefined, curve?: number): PluginAutomation;
        dly1SyncLeft(value?: number | undefined, curve?: number): PluginAutomation;
        dly1SyncRight(value?: number | undefined, curve?: number): PluginAutomation;
        dly1FeedbackPercent(value?: number | undefined, curve?: number): PluginAutomation;
        dly1CrossfeedPercent(value?: number | undefined, curve?: number): PluginAutomation;
        dly1MixPercent(value?: number | undefined, curve?: number): PluginAutomation;
        lfogWaveform(value?: number | undefined, curve?: number): PluginAutomation;
        lfogPolarity(value?: number | undefined, curve?: number): PluginAutomation;
        lfo1Restart(value?: number | undefined, curve?: number): PluginAutomation;
        lfo1Waveform(value?: number | undefined, curve?: number): PluginAutomation;
        lfo1PhasePercent(value?: number | undefined, curve?: number): PluginAutomation;
        lfo1Polarity(value?: number | undefined, curve?: number): PluginAutomation;
        lfo1DepthModDpt1Percent(value?: number | undefined, curve?: number): PluginAutomation;
        lfo1Rate(value?: number | undefined, curve?: number): PluginAutomation;
        lfo1FreqModDpt(value?: number | undefined, curve?: number): PluginAutomation;
    };
}
