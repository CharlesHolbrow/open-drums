"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TyrellN6Vst2 = void 0;
const FluidPlugin_1 = require("../FluidPlugin");
const techniques_1 = require("../techniques");
const pluginName = 'TyrellN6';
const pluginType = FluidPlugin_1.PluginType.VST2;
const parameterLibrary = {
    mainOutput: { name: 'main: Output', index: 0, isLinear: true, range: [0, 200] },
    pcoreMatrix1Source: { name: 'PCore: Matrix1 Source', index: 1, isLinear: false, choices: { "none": 0, "modwhl": 0.0714285746216774, "pitchw": 0.1428571492433548, "breath": 0.2142857313156128, "xpress": 0.25, "gate": 0.3214285969734192, "velocity": 0.392857164144516, "pressure": 0.4642857313156128, "keyfollow": 0.5, "keyfollow2": 0.5714285969734192, "alternate": 0.6428571939468384, "random": 0.7142857313156128, "stackvoice": 0.7500000596046448, "adsr1": 0.8214285969734192, "adsr2": 0.8928571939468384, "lfo1": 0.9642857313156128, "lfo2": 1 } },
    pcoreMatrix1Depth: { name: 'PCore: Matrix1 Depth', index: 2, isLinear: true, range: [-100, 100] },
    pcoreMatrix1ViaSrc: { name: 'PCore: Matrix1 ViaSrc', index: 3, isLinear: false, choices: { "none": 0, "modwhl": 0.0714285746216774, "pitchw": 0.1428571492433548, "breath": 0.2142857313156128, "xpress": 0.25, "gate": 0.3214285969734192, "velocity": 0.392857164144516, "pressure": 0.4642857313156128, "keyfollow": 0.5, "keyfollow2": 0.5714285969734192, "alternate": 0.6428571939468384, "random": 0.7142857313156128, "stackvoice": 0.7500000596046448, "adsr1": 0.8214285969734192, "adsr2": 0.8928571939468384, "lfo1": 0.9642857313156128, "lfo2": 1 } },
    pcoreMatrix1Via: { name: 'PCore: Matrix1 Via', index: 4, isLinear: true, range: [-100, 100] },
    pcoreMatrix2Source: { name: 'PCore: Matrix2 Source', index: 5, isLinear: false, choices: { "none": 0, "modwhl": 0.0714285746216774, "pitchw": 0.1428571492433548, "breath": 0.2142857313156128, "xpress": 0.25, "gate": 0.3214285969734192, "velocity": 0.392857164144516, "pressure": 0.4642857313156128, "keyfollow": 0.5, "keyfollow2": 0.5714285969734192, "alternate": 0.6428571939468384, "random": 0.7142857313156128, "stackvoice": 0.7500000596046448, "adsr1": 0.8214285969734192, "adsr2": 0.8928571939468384, "lfo1": 0.9642857313156128, "lfo2": 1 } },
    pcoreMatrix2Depth: { name: 'PCore: Matrix2 Depth', index: 6, isLinear: true, range: [-100, 100] },
    pcoreMatrix2ViaSrc: { name: 'PCore: Matrix2 ViaSrc', index: 7, isLinear: false, choices: { "none": 0, "modwhl": 0.0714285746216774, "pitchw": 0.1428571492433548, "breath": 0.2142857313156128, "xpress": 0.25, "gate": 0.3214285969734192, "velocity": 0.392857164144516, "pressure": 0.4642857313156128, "keyfollow": 0.5, "keyfollow2": 0.5714285969734192, "alternate": 0.6428571939468384, "random": 0.7142857313156128, "stackvoice": 0.7500000596046448, "adsr1": 0.8214285969734192, "adsr2": 0.8928571939468384, "lfo1": 0.9642857313156128, "lfo2": 1 } },
    pcoreMatrix2Via: { name: 'PCore: Matrix2 Via', index: 8, isLinear: true, range: [-100, 100] },
    vccVoiceStack: { name: 'VCC: Voice Stack', index: 9, isLinear: false, choices: { "1.00": 0.0357142873108387, "2.00": 0.1785714328289032, "3.00": 0.3214285969734192, "4.00": 0.4642857313156128, "5.00": 0.6071428656578064, "6.00": 0.7500000596046448, "7.00": 0.8928571939468384, "8.00": 1 } },
    vccMode: { name: 'VCC: Mode', index: 10, isLinear: false, choices: { "poly": 0.1428571492433548, "mono": 0.4642857313156128, "legato": 0.8214285969734192, "duo": 1 } },
    vccGlideMode: { name: 'VCC: GlideMode', index: 11, isLinear: false, choices: { "time": 0, "rate": 1 } },
    vccGlide: { name: 'VCC: Glide', index: 12, isLinear: true, range: [0, 100] },
    vccGlide2: { name: 'VCC: Glide2', index: 13, isLinear: true, range: [-100, 100] },
    vccPortaRange: { name: 'VCC: PortaRange', index: 14, isLinear: true, range: [0, 100] },
    vccPitchBendUp: { name: 'VCC: PitchBend Up', index: 15, isLinear: false, choices: { "0.00": 0, "1.00": 0.0357142873108387, "2.00": 0.0714285746216774, "3.00": 0.1428571492433548, "4.00": 0.1785714328289032, "5.00": 0.2142857313156128, "6.00": 0.25, "7.00": 0.2857142984867096, "8.00": 0.3214285969734192, "9.00": 0.392857164144516, "10.00": 0.4285714626312256, "11.00": 0.4642857313156128, "12.00": 0.5, "13.00": 0.535714328289032, "14.00": 0.5714285969734192, "15.00": 0.6428571939468384, "16.00": 0.6785714626312256, "17.00": 0.7142857313156128, "18.00": 0.7500000596046448, "19.00": 0.785714328289032, "20.00": 0.8214285969734192, "21.00": 0.8928571939468384, "22.00": 0.9285714626312256, "23.00": 0.9642857313156128, "24.00": 1 } },
    vccPitchBendDown: { name: 'VCC: PitchBend Down', index: 16, isLinear: false, choices: { "0.00": 0, "1.00": 0.0357142873108387, "2.00": 0.0714285746216774, "3.00": 0.1428571492433548, "4.00": 0.1785714328289032, "5.00": 0.2142857313156128, "6.00": 0.25, "7.00": 0.2857142984867096, "8.00": 0.3214285969734192, "9.00": 0.392857164144516, "10.00": 0.4285714626312256, "11.00": 0.4642857313156128, "12.00": 0.5, "13.00": 0.535714328289032, "14.00": 0.5714285969734192, "15.00": 0.6428571939468384, "16.00": 0.6785714626312256, "17.00": 0.7142857313156128, "18.00": 0.7500000596046448, "19.00": 0.785714328289032, "20.00": 0.8214285969734192, "21.00": 0.8928571939468384, "22.00": 0.9285714626312256, "23.00": 0.9642857313156128, "24.00": 1 } },
    vccTranspose: { name: 'VCC: Transpose', index: 17, isLinear: true, range: [-24, 24] },
    env1Attack: { name: 'ENV1: Attack', index: 18, isLinear: true, range: [0, 100] },
    env1Decay: { name: 'ENV1: Decay', index: 19, isLinear: true, range: [0, 100] },
    env1Sustain: { name: 'ENV1: Sustain', index: 20, isLinear: true, range: [0, 100] },
    env1FallRise: { name: 'ENV1: Fall-Rise', index: 21, isLinear: true, range: [-100, 100] },
    env1Release: { name: 'ENV1: Release', index: 22, isLinear: true, range: [0, 100] },
    env1Velocity: { name: 'ENV1: Velocity', index: 23, isLinear: true, range: [0, 100] },
    env1KeyTrack: { name: 'ENV1: KeyTrack', index: 24, isLinear: true, range: [-100, 100] },
    env1Trigger: { name: 'ENV1: Trigger', index: 25, isLinear: false, choices: { "gate": 0.1428571492433548, "loop": 0.4642857313156128, "lfo1": 0.8214285969734192, "lfo2": 1 } },
    env2Attack: { name: 'ENV2: Attack', index: 26, isLinear: true, range: [0, 100] },
    env2Decay: { name: 'ENV2: Decay', index: 27, isLinear: true, range: [0, 100] },
    env2Sustain: { name: 'ENV2: Sustain', index: 28, isLinear: true, range: [0, 100] },
    env2FallRise: { name: 'ENV2: Fall-Rise', index: 29, isLinear: true, range: [-100, 100] },
    env2Release: { name: 'ENV2: Release', index: 30, isLinear: true, range: [0, 100] },
    env2Velocity: { name: 'ENV2: Velocity', index: 31, isLinear: true, range: [0, 100] },
    env2KeyTrack: { name: 'ENV2: KeyTrack', index: 32, isLinear: true, range: [-100, 100] },
    env2Trigger: { name: 'ENV2: Trigger', index: 33, isLinear: false, choices: { "gate": 0.1071428656578064, "single": 0.3571428656578064, "loop": 0.6071428656578064, "lfo1": 0.8571429252624512, "lfo2": 1 } },
    lfo1Sync: { name: 'LFO1: Sync', index: 34, isLinear: false, range: [0.1, 8] },
    lfo1Delay: { name: 'LFO1: Delay', index: 35, isLinear: true, range: [0, 100] },
    lfo2Sync: { name: 'LFO2: Sync', index: 36, isLinear: false, range: [0.1, 8] },
    lfo2Delay: { name: 'LFO2: Delay', index: 37, isLinear: true, range: [0, 100] },
    tyrellShape1: { name: 'Tyrell: Shape1', index: 38, isLinear: true, range: [1, 4] },
    tyrellTuneModSrc1: { name: 'Tyrell: TuneModSrc1', index: 39, isLinear: false, choices: { "none": 0, "modwhl": 0.0714285746216774, "pitchw": 0.1428571492433548, "breath": 0.2142857313156128, "xpress": 0.25, "gate": 0.3214285969734192, "velocity": 0.392857164144516, "pressure": 0.4642857313156128, "keyfollow": 0.5, "keyfollow2": 0.5714285969734192, "alternate": 0.6428571939468384, "random": 0.7142857313156128, "stackvoice": 0.7500000596046448, "adsr1": 0.8214285969734192, "adsr2": 0.8928571939468384, "lfo1": 0.9642857313156128, "lfo2": 1 } },
    tyrellTuneModDepth1: { name: 'Tyrell: TuneModDepth1', index: 40, isLinear: true, range: [-24, 24] },
    tyrellShape2: { name: 'Tyrell: Shape2', index: 41, isLinear: true, range: [1, 2] },
    tyrellTune2: { name: 'Tyrell: Tune2', index: 42, isLinear: true, range: [0, 24] },
    tyrellFineTune2: { name: 'Tyrell: FineTune2', index: 43, isLinear: true, range: [-50, 50] },
    tyrellTuneModSrc2: { name: 'Tyrell: TuneModSrc2', index: 44, isLinear: false, choices: { "none": 0, "modwhl": 0.0714285746216774, "pitchw": 0.1428571492433548, "breath": 0.2142857313156128, "xpress": 0.25, "gate": 0.3214285969734192, "velocity": 0.392857164144516, "pressure": 0.4642857313156128, "keyfollow": 0.5, "keyfollow2": 0.5714285969734192, "alternate": 0.6428571939468384, "random": 0.7142857313156128, "stackvoice": 0.7500000596046448, "adsr1": 0.8214285969734192, "adsr2": 0.8928571939468384, "lfo1": 0.9642857313156128, "lfo2": 1 } },
    tyrellTuneModDepth2: { name: 'Tyrell: TuneModDepth2', index: 45, isLinear: true, range: [-24, 24] },
    tyrellPwdepth: { name: 'Tyrell: PWDepth', index: 46, isLinear: true, range: [0, 50] },
    tyrellPwsrc: { name: 'Tyrell: PWSrc', index: 47, isLinear: false, choices: { "none": 0, "modwhl": 0.0714285746216774, "pitchw": 0.1428571492433548, "breath": 0.2142857313156128, "xpress": 0.25, "gate": 0.3214285969734192, "velocity": 0.392857164144516, "pressure": 0.4642857313156128, "keyfollow": 0.5, "keyfollow2": 0.5714285969734192, "alternate": 0.6428571939468384, "random": 0.7142857313156128, "stackvoice": 0.7500000596046448, "adsr1": 0.8214285969734192, "adsr2": 0.8928571939468384, "lfo1": 0.9642857313156128, "lfo2": 1 } },
    tyrellDetune: { name: 'Tyrell: Detune', index: 48, isLinear: true, range: [-50, 50] },
    tyrellSoftSync: { name: 'Tyrell: SoftSync', index: 49, isLinear: true, range: [0, 100] },
    tyrellVibrato: { name: 'Tyrell: Vibrato', index: 50, isLinear: true, range: [0, 100] },
    tyrellRingModIn1: { name: 'Tyrell: RingModIn1', index: 51, isLinear: false, choices: { "osc1": 0.0714285746216774, "osc2": 0.2857142984867096, "subosc": 0.4642857313156128, "osc1+2": 0.6785714626312256, "osc1+sub": 0.8928571939468384, "vcf": 1 } },
    tyrellRingModIn2: { name: 'Tyrell: RingModIn2', index: 52, isLinear: false, choices: { "osc1": 0.2142857313156128, "osc2": 0.7142857313156128, "subosc": 1 } },
    tyrellNoiseColour: { name: 'Tyrell: NoiseColour', index: 53, isLinear: true, range: [1, 3] },
    tyrellOscVolume1: { name: 'Tyrell: OscVolume1', index: 54, isLinear: true, range: [-100, 25] },
    tyrellOscVolume2: { name: 'Tyrell: OscVolume2', index: 55, isLinear: true, range: [-100, 25] },
    tyrellSubVolume: { name: 'Tyrell: SubVolume', index: 56, isLinear: true, range: [-100, 25] },
    tyrellNoiseVolume: { name: 'Tyrell: NoiseVolume', index: 57, isLinear: true, range: [-100, 25] },
    tyrellRingModulator: { name: 'Tyrell: RingModulator', index: 58, isLinear: true, range: [-100, 25] },
    tyrellFeedback: { name: 'Tyrell: Feedback', index: 59, isLinear: true, range: [-100, 25] },
    tyrellVcfmode: { name: 'Tyrell: VCFMode', index: 60, isLinear: false, choices: { "lp / hp": 0, "bp": 1 } },
    tyrellVcfpoles: { name: 'Tyrell: VCFPoles', index: 61, isLinear: false, choices: { "12 db/oct": 0.2142857313156128, "24 db/oct": 0.7142857313156128, "36 db/oct": 1 } },
    tyrellCutoff: { name: 'Tyrell: Cutoff', index: 62, isLinear: true, range: [30, 150] },
    tyrellFreqModSrc1: { name: 'Tyrell: FreqModSrc1', index: 63, isLinear: false, choices: { "none": 0, "modwhl": 0.0714285746216774, "pitchw": 0.1428571492433548, "breath": 0.2142857313156128, "xpress": 0.25, "gate": 0.3214285969734192, "velocity": 0.392857164144516, "pressure": 0.4642857313156128, "keyfollow": 0.5, "keyfollow2": 0.5714285969734192, "alternate": 0.6428571939468384, "random": 0.7142857313156128, "stackvoice": 0.7500000596046448, "adsr1": 0.8214285969734192, "adsr2": 0.8928571939468384, "lfo1": 0.9642857313156128, "lfo2": 1 } },
    tyrellFreqModDepth1: { name: 'Tyrell: FreqModDepth1', index: 64, isLinear: true, range: [-120, 120] },
    tyrellFreqModSrc2: { name: 'Tyrell: FreqModSrc2', index: 65, isLinear: false, choices: { "none": 0, "modwhl": 0.0714285746216774, "pitchw": 0.1428571492433548, "breath": 0.2142857313156128, "xpress": 0.25, "gate": 0.3214285969734192, "velocity": 0.392857164144516, "pressure": 0.4642857313156128, "keyfollow": 0.5, "keyfollow2": 0.5714285969734192, "alternate": 0.6428571939468384, "random": 0.7142857313156128, "stackvoice": 0.7500000596046448, "adsr1": 0.8214285969734192, "adsr2": 0.8928571939468384, "lfo1": 0.9642857313156128, "lfo2": 1 } },
    tyrellFreqModDepth2: { name: 'Tyrell: FreqModDepth2', index: 66, isLinear: true, range: [-120, 120] },
    tyrellKeyFollow: { name: 'Tyrell: KeyFollow', index: 67, isLinear: true, range: [0, 100] },
    tyrellResonance: { name: 'Tyrell: Resonance', index: 68, isLinear: true, range: [0, 100] },
    tyrellMixSpread: { name: 'Tyrell: MixSpread', index: 69, isLinear: true, range: [0, 100] },
    tyrellAudioRateSrc: { name: 'Tyrell: AudioRateSrc', index: 70, isLinear: false, choices: { "osc1": 1 } },
    tyrellAudioRateDest: { name: 'Tyrell: AudioRateDest', index: 71, isLinear: false, choices: { "osc2 fm": 0.2142857313156128, "osc2 pwm": 0.7142857313156128, "filterfm": 1 } },
    tyrellXmoddepth: { name: 'Tyrell: XModDepth', index: 72, isLinear: true, range: [0, 100] },
    tyrellAudioRateModSrc: { name: 'Tyrell: AudioRateModSrc', index: 73, isLinear: false, choices: { "none": 0, "modwhl": 0.0714285746216774, "pitchw": 0.1428571492433548, "breath": 0.2142857313156128, "xpress": 0.25, "gate": 0.3214285969734192, "velocity": 0.392857164144516, "pressure": 0.4642857313156128, "keyfollow": 0.5, "keyfollow2": 0.5714285969734192, "alternate": 0.6428571939468384, "random": 0.7142857313156128, "stackvoice": 0.7500000596046448, "adsr1": 0.8214285969734192, "adsr2": 0.8928571939468384, "lfo1": 0.9642857313156128, "lfo2": 1 } },
    chrs1Type: { name: 'Chrs1: Type', index: 74, isLinear: false, choices: { "classic": 0.2142857313156128, "dramatic": 0.7142857313156128, "ensemble": 1 } },
    chrs1Rate: { name: 'Chrs1: Rate', index: 75, isLinear: true, range: [0, 100] },
    chrs1Depth: { name: 'Chrs1: Depth', index: 76, isLinear: true, range: [0, 100] },
    chrs1Wet: { name: 'Chrs1: Wet', index: 77, isLinear: true, range: [0, 100] },
    lfo1Restart: { name: 'LFO1: Restart', index: 78, isLinear: false, choices: { "sync": 0.1428571492433548, "gate": 0.4642857313156128, "single": 0.8214285969734192, "random": 1 } },
    lfo1Waveform: { name: 'LFO1: Waveform', index: 79, isLinear: false, choices: { "sine": 0.0357142873108387, "triangle": 0.1785714328289032, "saw up": 0.3214285969734192, "saw down": 0.4642857313156128, "sqr hi-lo": 0.6071428656578064, "sqr lo-hi": 0.7500000596046448, "rand hold": 0.8928571939468384, "rand glide": 1 } },
    lfo1Phase: { name: 'LFO1: Phase', index: 80, isLinear: true, range: [0, 100] },
    lfo1Polarity: { name: 'LFO1: Polarity', index: 81, isLinear: false, choices: { "bipolar": 0, "positive": 1 } },
    lfo1DepthModDpt1: { name: 'LFO1: DepthMod Dpt1', index: 82, isLinear: true, range: [0, 100] },
    lfo1Rate: { name: 'LFO1: Rate', index: 83, isLinear: true, range: [-5, 5] },
    lfo1FreqModDpt: { name: 'LFO1: FreqMod Dpt', index: 84, isLinear: true, range: [-5, 5] },
    lfo2Restart: { name: 'LFO2: Restart', index: 85, isLinear: false, choices: { "sync": 0.1428571492433548, "gate": 0.4642857313156128, "single": 0.8214285969734192, "random": 1 } },
    lfo2Waveform: { name: 'LFO2: Waveform', index: 86, isLinear: false, choices: { "sine": 0.0357142873108387, "triangle": 0.1785714328289032, "saw up": 0.3214285969734192, "saw down": 0.4642857313156128, "sqr hi-lo": 0.6071428656578064, "sqr lo-hi": 0.7500000596046448, "rand hold": 0.8928571939468384, "rand glide": 1 } },
    lfo2Phase: { name: 'LFO2: Phase', index: 87, isLinear: true, range: [0, 100] },
    lfo2Polarity: { name: 'LFO2: Polarity', index: 88, isLinear: false, choices: { "bipolar": 0, "positive": 1 } },
    lfo2DepthModDpt1: { name: 'LFO2: DepthMod Dpt1', index: 89, isLinear: true, range: [0, 100] },
    lfo2Rate: { name: 'LFO2: Rate', index: 90, isLinear: true, range: [-5, 5] },
    lfo2FreqModDpt: { name: 'LFO2: FreqMod Dpt', index: 91, isLinear: true, range: [-5, 5] }
};
const makeAutomation = {
    mainOutput(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'mainOutput',
        });
    },
    pcoreMatrix1Source(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'pcoreMatrix1Source',
        });
    },
    pcoreMatrix1Depth(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'pcoreMatrix1Depth',
        });
    },
    pcoreMatrix1ViaSrc(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'pcoreMatrix1ViaSrc',
        });
    },
    pcoreMatrix1Via(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'pcoreMatrix1Via',
        });
    },
    pcoreMatrix2Source(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'pcoreMatrix2Source',
        });
    },
    pcoreMatrix2Depth(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'pcoreMatrix2Depth',
        });
    },
    pcoreMatrix2ViaSrc(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'pcoreMatrix2ViaSrc',
        });
    },
    pcoreMatrix2Via(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'pcoreMatrix2Via',
        });
    },
    vccVoiceStack(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'vccVoiceStack',
        });
    },
    vccMode(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'vccMode',
        });
    },
    vccGlideMode(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'vccGlideMode',
        });
    },
    vccGlide(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'vccGlide',
        });
    },
    vccGlide2(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'vccGlide2',
        });
    },
    vccPortaRange(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'vccPortaRange',
        });
    },
    vccPitchBendUp(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'vccPitchBendUp',
        });
    },
    vccPitchBendDown(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'vccPitchBendDown',
        });
    },
    vccTranspose(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'vccTranspose',
        });
    },
    env1Attack(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'env1Attack',
        });
    },
    env1Decay(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'env1Decay',
        });
    },
    env1Sustain(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'env1Sustain',
        });
    },
    env1FallRise(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'env1FallRise',
        });
    },
    env1Release(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'env1Release',
        });
    },
    env1Velocity(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'env1Velocity',
        });
    },
    env1KeyTrack(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'env1KeyTrack',
        });
    },
    env1Trigger(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'env1Trigger',
        });
    },
    env2Attack(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'env2Attack',
        });
    },
    env2Decay(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'env2Decay',
        });
    },
    env2Sustain(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'env2Sustain',
        });
    },
    env2FallRise(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'env2FallRise',
        });
    },
    env2Release(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'env2Release',
        });
    },
    env2Velocity(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'env2Velocity',
        });
    },
    env2KeyTrack(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'env2KeyTrack',
        });
    },
    env2Trigger(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'env2Trigger',
        });
    },
    lfo1Sync(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'lfo1Sync',
        });
    },
    lfo1Delay(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'lfo1Delay',
        });
    },
    lfo2Sync(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'lfo2Sync',
        });
    },
    lfo2Delay(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'lfo2Delay',
        });
    },
    tyrellShape1(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'tyrellShape1',
        });
    },
    tyrellTuneModSrc1(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'tyrellTuneModSrc1',
        });
    },
    tyrellTuneModDepth1(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'tyrellTuneModDepth1',
        });
    },
    tyrellShape2(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'tyrellShape2',
        });
    },
    tyrellTune2(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'tyrellTune2',
        });
    },
    tyrellFineTune2(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'tyrellFineTune2',
        });
    },
    tyrellTuneModSrc2(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'tyrellTuneModSrc2',
        });
    },
    tyrellTuneModDepth2(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'tyrellTuneModDepth2',
        });
    },
    tyrellPwdepth(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'tyrellPwdepth',
        });
    },
    tyrellPwsrc(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'tyrellPwsrc',
        });
    },
    tyrellDetune(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'tyrellDetune',
        });
    },
    tyrellSoftSync(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'tyrellSoftSync',
        });
    },
    tyrellVibrato(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'tyrellVibrato',
        });
    },
    tyrellRingModIn1(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'tyrellRingModIn1',
        });
    },
    tyrellRingModIn2(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'tyrellRingModIn2',
        });
    },
    tyrellNoiseColour(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'tyrellNoiseColour',
        });
    },
    tyrellOscVolume1(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'tyrellOscVolume1',
        });
    },
    tyrellOscVolume2(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'tyrellOscVolume2',
        });
    },
    tyrellSubVolume(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'tyrellSubVolume',
        });
    },
    tyrellNoiseVolume(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'tyrellNoiseVolume',
        });
    },
    tyrellRingModulator(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'tyrellRingModulator',
        });
    },
    tyrellFeedback(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'tyrellFeedback',
        });
    },
    tyrellVcfmode(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'tyrellVcfmode',
        });
    },
    tyrellVcfpoles(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'tyrellVcfpoles',
        });
    },
    tyrellCutoff(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'tyrellCutoff',
        });
    },
    tyrellFreqModSrc1(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'tyrellFreqModSrc1',
        });
    },
    tyrellFreqModDepth1(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'tyrellFreqModDepth1',
        });
    },
    tyrellFreqModSrc2(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'tyrellFreqModSrc2',
        });
    },
    tyrellFreqModDepth2(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'tyrellFreqModDepth2',
        });
    },
    tyrellKeyFollow(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'tyrellKeyFollow',
        });
    },
    tyrellResonance(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'tyrellResonance',
        });
    },
    tyrellMixSpread(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'tyrellMixSpread',
        });
    },
    tyrellAudioRateSrc(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'tyrellAudioRateSrc',
        });
    },
    tyrellAudioRateDest(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'tyrellAudioRateDest',
        });
    },
    tyrellXmoddepth(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'tyrellXmoddepth',
        });
    },
    tyrellAudioRateModSrc(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'tyrellAudioRateModSrc',
        });
    },
    chrs1Type(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'chrs1Type',
        });
    },
    chrs1Rate(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'chrs1Rate',
        });
    },
    chrs1Depth(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'chrs1Depth',
        });
    },
    chrs1Wet(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'chrs1Wet',
        });
    },
    lfo1Restart(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'lfo1Restart',
        });
    },
    lfo1Waveform(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'lfo1Waveform',
        });
    },
    lfo1Phase(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'lfo1Phase',
        });
    },
    lfo1Polarity(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'lfo1Polarity',
        });
    },
    lfo1DepthModDpt1(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'lfo1DepthModDpt1',
        });
    },
    lfo1Rate(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'lfo1Rate',
        });
    },
    lfo1FreqModDpt(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'lfo1FreqModDpt',
        });
    },
    lfo2Restart(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'lfo2Restart',
        });
    },
    lfo2Waveform(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'lfo2Waveform',
        });
    },
    lfo2Phase(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'lfo2Phase',
        });
    },
    lfo2Polarity(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'lfo2Polarity',
        });
    },
    lfo2DepthModDpt1(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'lfo2DepthModDpt1',
        });
    },
    lfo2Rate(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'lfo2Rate',
        });
    },
    lfo2FreqModDpt(value, curve = 0) {
        return new techniques_1.PluginAutomation({
            value,
            curve,
            pluginSelector: { pluginName, pluginType },
            paramKey: 'lfo2FreqModDpt',
        });
    }
};
class TyrellN6Vst2 extends FluidPlugin_1.FluidPlugin {
    constructor(parameters = {}) {
        super(pluginName, pluginType);
        this.parameters = parameters;
        this.parameterLibrary = parameterLibrary;
        this.makeAutomation = makeAutomation;
    }
}
exports.TyrellN6Vst2 = TyrellN6Vst2;
// Static members
TyrellN6Vst2.parameterLibrary = parameterLibrary;
TyrellN6Vst2.makeAutomation = makeAutomation;
//# sourceMappingURL=tyrell-n6-vst2.js.map