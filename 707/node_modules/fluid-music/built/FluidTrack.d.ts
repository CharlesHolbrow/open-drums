import { Clip, ScoreConfig, TrackReceive, Tap, UnresolvedSend } from './fluid-interfaces';
import { FluidAudioFile } from './FluidAudioFile';
import { FluidPlugin, Automation } from './FluidPlugin';
export declare class FluidReceive implements TrackReceive {
    constructor(options: {
        from: FluidTrack;
        gainDb?: number;
        tap?: Tap;
    });
    from: FluidTrack;
    gainDb: number;
    tap: Tap;
}
export interface TrackConfig extends ScoreConfig {
    name: string;
    gainDb?: number;
    pan?: number;
    width?: number;
    plugins?: FluidPlugin[];
    sends?: UnresolvedSend[];
    children?: TrackConfig[];
}
export declare class FluidTrack {
    scoreConfig: ScoreConfig;
    name: string;
    gainDb: number;
    pan: number;
    width: number;
    clips: Clip[];
    audioFiles: FluidAudioFile[];
    plugins: FluidPlugin[];
    receives: TrackReceive[];
    automation: Automation;
    duration?: number;
    startTime?: number;
    unresolvedSends: UnresolvedSend[];
    children: FluidTrack[];
    constructor(config: TrackConfig);
}
